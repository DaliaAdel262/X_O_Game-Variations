{"code":"V1061","currLine":"namespace std","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\x86_64-w64-mingw32\\bits\\c++config.h","lines":[278]}],"prevLine":"*/","sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\memoryfwd.h","lines":[50]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\stringfwd.h","lines":[42]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V677","currLine":"  typedef __gnuc_va_list va_list;","falseAlarm":false,"level":2,"message":"Custom declaration of a standard 'va_list' type. The declaration from system header files should be used instead.","nextLine":"#elif defined(_MSC_VER)","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\vadefs.h","lines":[31]}],"prevLine":"#if defined(__GNUC__)","sastId":"CERT-DCL37-C"}
{"code":"V677","currLine":"__MINGW_EXTENSION typedef unsigned __int64 size_t;","falseAlarm":false,"level":2,"message":"Custom declaration of a standard 'size_t' type. The declaration from system header files should be used instead.","nextLine":"#else","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\corecrt.h","lines":[40]}],"prevLine":"#ifdef _WIN64","sastId":"CERT-DCL37-C"}
{"code":"V677","currLine":"__MINGW_EXTENSION typedef __int64 intptr_t;","falseAlarm":false,"level":2,"message":"Custom declaration of a standard 'intptr_t' type. The declaration from system header files should be used instead.","nextLine":"#else","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\corecrt.h","lines":[67]}],"prevLine":"#ifdef _WIN64","sastId":"CERT-DCL37-C"}
{"code":"V677","currLine":"__MINGW_EXTENSION typedef unsigned __int64 uintptr_t;","falseAlarm":false,"level":2,"message":"Custom declaration of a standard 'uintptr_t' type. The declaration from system header files should be used instead.","nextLine":"#else","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\corecrt.h","lines":[80]}],"prevLine":"#ifdef _WIN64","sastId":"CERT-DCL37-C"}
{"code":"V677","currLine":"__MINGW_EXTENSION typedef __int64 ptrdiff_t;","falseAlarm":false,"level":2,"message":"Custom declaration of a standard 'ptrdiff_t' type. The declaration from system header files should be used instead.","nextLine":"#else","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\corecrt.h","lines":[93]}],"prevLine":"#ifdef _WIN64","sastId":"CERT-DCL37-C"}
{"code":"V677","currLine":"typedef unsigned short wint_t;","falseAlarm":false,"level":2,"message":"Custom declaration of a standard 'wint_t' type. The declaration from system header files should be used instead.","nextLine":"typedef unsigned short wctype_t;","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\corecrt.h","lines":[111]}],"prevLine":"#define _WINT_T","sastId":"CERT-DCL37-C"}
{"code":"V677","currLine":"typedef unsigned short wctype_t;","falseAlarm":false,"level":2,"message":"Custom declaration of a standard 'wctype_t' type. The declaration from system header files should be used instead.","nextLine":"#endif /* _WINT_T */","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\corecrt.h","lines":[112]}],"prevLine":"typedef unsigned short wint_t;","sastId":"CERT-DCL37-C"}
{"code":"V677","currLine":"typedef int errno_t;","falseAlarm":false,"level":2,"message":"Custom declaration of a standard 'errno_t' type. The declaration from system header files should be used instead.","nextLine":"#endif","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\corecrt.h","lines":[118]}],"prevLine":"#define _ERRCODE_DEFINED","sastId":"CERT-DCL37-C"}
{"code":"V677","currLine":"typedef long __time32_t;","falseAlarm":false,"level":2,"message":"Custom declaration of a standard '__time32_t' type. The declaration from system header files should be used instead.","nextLine":"#endif","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\corecrt.h","lines":[123]}],"prevLine":"#define _TIME32_T_DEFINED","sastId":"CERT-DCL37-C"}
{"code":"V677","currLine":"__MINGW_EXTENSION typedef __int64 __time64_t;","falseAlarm":false,"level":2,"message":"Custom declaration of a standard '__time64_t' type. The declaration from system header files should be used instead.","nextLine":"#endif /* _TIME64_T_DEFINED */","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\corecrt.h","lines":[128]}],"prevLine":"#define _TIME64_T_DEFINED","sastId":"CERT-DCL37-C"}
{"code":"V677","currLine":"typedef __time64_t time_t;","falseAlarm":false,"level":2,"message":"Custom declaration of a standard 'time_t' type. The declaration from system header files should be used instead.","nextLine":"#endif","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\corecrt.h","lines":[143]}],"prevLine":"#else","sastId":"CERT-DCL37-C"}
{"code":"V677","currLine":"} _locale_tstruct,*_locale_t;","falseAlarm":false,"level":2,"message":"Custom declaration of a standard '_locale_t' type. The declaration from system header files should be used instead.","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\corecrt.h","lines":[444]}],"prevLine":"  pthreadmbcinfo mbcinfo;","sastId":"CERT-DCL37-C"}
{"code":"V677","currLine":"  typedef struct _iobuf FILE;","falseAlarm":false,"level":2,"message":"Custom declaration of a standard 'FILE' type. The declaration from system header files should be used instead.","nextLine":"#define _FILE_DEFINED","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\wchar.h","lines":[52]}],"prevLine":"  };","sastId":"CERT-DCL37-C"}
{"code":"V677","currLine":"  typedef unsigned long _fsize_t;","falseAlarm":false,"level":2,"message":"Custom declaration of a standard '_fsize_t' type. The declaration from system header files should be used instead.","nextLine":"#define _FSIZE_T_DEFINED","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\wchar.h","lines":[82]}],"prevLine":"#ifndef _FSIZE_T_DEFINED","sastId":"CERT-DCL37-C"}
{"code":"V677","currLine":"  typedef unsigned short _ino_t;","falseAlarm":false,"level":2,"message":"Custom declaration of a standard '_ino_t' type. The declaration from system header files should be used instead.","nextLine":"#ifndef NO_OLDNAMES","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\wchar.h","lines":[398]}],"prevLine":"#define _INO_T_DEFINED","sastId":"CERT-DCL37-C"}
{"code":"V677","currLine":"  typedef unsigned short ino_t;","falseAlarm":false,"level":2,"message":"Custom declaration of a standard 'ino_t' type. The declaration from system header files should be used instead.","nextLine":"#endif","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\wchar.h","lines":[400]}],"prevLine":"#ifndef NO_OLDNAMES","sastId":"CERT-DCL37-C"}
{"code":"V677","currLine":"  typedef unsigned int _dev_t;","falseAlarm":false,"level":2,"message":"Custom declaration of a standard '_dev_t' type. The declaration from system header files should be used instead.","nextLine":"#ifndef NO_OLDNAMES","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\wchar.h","lines":[406]}],"prevLine":"#define _DEV_T_DEFINED","sastId":"CERT-DCL37-C"}
{"code":"V677","currLine":"  typedef unsigned int dev_t;","falseAlarm":false,"level":2,"message":"Custom declaration of a standard 'dev_t' type. The declaration from system header files should be used instead.","nextLine":"#endif","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\wchar.h","lines":[408]}],"prevLine":"#ifndef NO_OLDNAMES","sastId":"CERT-DCL37-C"}
{"code":"V677","currLine":"  typedef long _off_t;","falseAlarm":false,"level":2,"message":"Custom declaration of a standard '_off_t' type. The declaration from system header files should be used instead.","nextLine":"#if !defined(NO_OLDNAMES) || defined(_POSIX)","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\_mingw_off_t.h","lines":[5]}],"prevLine":"#define _OFF_T_","sastId":"CERT-DCL37-C"}
{"code":"V677","currLine":"typedef off32_t off_t;","falseAlarm":false,"level":2,"message":"Custom declaration of a standard 'off_t' type. The declaration from system header files should be used instead.","nextLine":"#endif /* #if !defined(NO_OLDNAMES) || defined(_POSIX) */","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\_mingw_off_t.h","lines":[26]}],"prevLine":"#else","sastId":"CERT-DCL37-C"}
{"code":"V802","currLine":"  struct _stat32i64 {","falseAlarm":false,"level":2,"message":"On 64-bit platform, structure size can be reduced from 48 to 40 bytes by rearranging the fields according to their sizes in decreasing order.","nextLine":"    _dev_t st_dev;","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\_mingw_stat64.h","lines":[55]}]}
{"code":"V677","currLine":"  typedef int mbstate_t;","falseAlarm":false,"level":2,"message":"Custom declaration of a standard 'mbstate_t' type. The declaration from system header files should be used instead.","nextLine":"#endif","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\wchar.h","lines":[1445]}],"prevLine":"#else","sastId":"CERT-DCL37-C"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\cwchar","lines":[137]}],"prevLine":"{","sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\postypes.h","lines":[68]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\iosfwd","lines":[42]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\exception.h","lines":[42]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\exception","lines":[42]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\cxxabi_init_exception.h","lines":[50]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\hash_bytes.h","lines":[37]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\typeinfo","lines":[80]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std ","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\new","lines":[47]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std ","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\exception_ptr.h","lines":[50]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\move.h","lines":[38]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\type_traits","lines":[40]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\move.h","lines":[59]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\nested_exception.h","lines":[44]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\functexcept.h","lines":[42]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\cpp_type_traits.h","lines":[69]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\stl_pair.h","lines":[69]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\stl_iterator_base_types.h","lines":[74]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\stl_iterator_base_funcs.h","lines":[67]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\ptr_traits.h","lines":[42]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V690","currLine":"    class reverse_iterator","falseAlarm":false,"level":3,"message":"The 'reverse_iterator' class implements a copy constructor, but lacks the copy assignment operator. It is dangerous to use such a class.","nextLine":"    : public iterator<typename iterator_traits<_Iterator>::iterator_category,","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\stl_iterator.h","lines":[127]}],"prevLine":"  template<typename _Iterator>"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\stl_iterator.h","lines":[87]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\stl_iterator.h","lines":[1250]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\stl_algobase.h","lines":[79]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V835","currLine":"      to_char_type(const int_type& __c)","falseAlarm":false,"level":3,"message":"Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, pass the first argument by value.","nextLine":"      { return static_cast<char_type>(__c); }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\char_traits.h","lines":[132]}],"prevLine":"      static _GLIBCXX_CONSTEXPR char_type"}
{"code":"V835","currLine":"      eq_int_type(const int_type& __c1, const int_type& __c2)","falseAlarm":false,"level":3,"message":"Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, pass the first argument by value.","nextLine":"      { return __c1 == __c2; }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\char_traits.h","lines":[140]}],"prevLine":"      static _GLIBCXX_CONSTEXPR bool"}
{"code":"V835","currLine":"      eq_int_type(const int_type& __c1, const int_type& __c2)","falseAlarm":false,"level":3,"message":"Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, pass the second argument by value.","nextLine":"      { return __c1 == __c2; }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\char_traits.h","lines":[140]}],"prevLine":"      static _GLIBCXX_CONSTEXPR bool"}
{"code":"V835","currLine":"      not_eof(const int_type& __c)","falseAlarm":false,"level":3,"message":"Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, pass the first argument by value.","nextLine":"      { return !eq_int_type(__c, eof()) ? __c : to_int_type(char_type()); }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\char_traits.h","lines":[148]}],"prevLine":"      static _GLIBCXX_CONSTEXPR int_type"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\char_traits.h","lines":[234]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V835","currLine":"      assign(char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT","falseAlarm":false,"level":3,"message":"Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, pass the second argument by value.","nextLine":"      { __c1 = __c2; }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\char_traits.h","lines":[328]}],"prevLine":"      static _GLIBCXX17_CONSTEXPR void"}
{"code":"V835","currLine":"      eq(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT","falseAlarm":false,"level":3,"message":"Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, pass the first argument by value.","nextLine":"      { return __c1 == __c2; }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\char_traits.h","lines":[332]}],"prevLine":"      static _GLIBCXX_CONSTEXPR bool"}
{"code":"V835","currLine":"      eq(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT","falseAlarm":false,"level":3,"message":"Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, pass the second argument by value.","nextLine":"      { return __c1 == __c2; }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\char_traits.h","lines":[332]}],"prevLine":"      static _GLIBCXX_CONSTEXPR bool"}
{"code":"V835","currLine":"      lt(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT","falseAlarm":false,"level":3,"message":"Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, pass the first argument by value.","nextLine":"      {","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\char_traits.h","lines":[336]}],"prevLine":"      static _GLIBCXX_CONSTEXPR bool"}
{"code":"V835","currLine":"      lt(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT","falseAlarm":false,"level":3,"message":"Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, pass the second argument by value.","nextLine":"      {","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\char_traits.h","lines":[336]}],"prevLine":"      static _GLIBCXX_CONSTEXPR bool"}
{"code":"V835","currLine":"      find(const char_type* __s, size_t __n, const char_type& __a)","falseAlarm":false,"level":3,"message":"Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, pass the third argument by value.","nextLine":"      {","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\char_traits.h","lines":[375]}],"prevLine":"      static _GLIBCXX17_CONSTEXPR const char_type*"}
{"code":"V835","currLine":"      to_char_type(const int_type& __c) _GLIBCXX_NOEXCEPT","falseAlarm":false,"level":3,"message":"Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, pass the first argument by value.","nextLine":"      { return static_cast<char_type>(__c); }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\char_traits.h","lines":[425]}],"prevLine":"      static _GLIBCXX_CONSTEXPR char_type"}
{"code":"V835","currLine":"      to_int_type(const char_type& __c) _GLIBCXX_NOEXCEPT","falseAlarm":false,"level":3,"message":"Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, pass the first argument by value.","nextLine":"      { return static_cast<int_type>(static_cast<unsigned char>(__c)); }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\char_traits.h","lines":[431]}],"prevLine":"      static _GLIBCXX_CONSTEXPR int_type"}
{"code":"V835","currLine":"      eq_int_type(const int_type& __c1, const int_type& __c2) _GLIBCXX_NOEXCEPT","falseAlarm":false,"level":3,"message":"Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, pass the first argument by value.","nextLine":"      { return __c1 == __c2; }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\char_traits.h","lines":[435]}],"prevLine":"      static _GLIBCXX_CONSTEXPR bool"}
{"code":"V835","currLine":"      eq_int_type(const int_type& __c1, const int_type& __c2) _GLIBCXX_NOEXCEPT","falseAlarm":false,"level":3,"message":"Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, pass the second argument by value.","nextLine":"      { return __c1 == __c2; }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\char_traits.h","lines":[435]}],"prevLine":"      static _GLIBCXX_CONSTEXPR bool"}
{"code":"V835","currLine":"      not_eof(const int_type& __c) _GLIBCXX_NOEXCEPT","falseAlarm":false,"level":3,"message":"Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, pass the first argument by value.","nextLine":"      { return (__c == eof()) ? 0 : __c; }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\char_traits.h","lines":[443]}],"prevLine":"      static _GLIBCXX_CONSTEXPR int_type"}
{"code":"V835","currLine":"      assign(char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT","falseAlarm":false,"level":3,"message":"Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, pass the second argument by value.","nextLine":"      { __c1 = __c2; }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\char_traits.h","lines":[463]}],"prevLine":"      static _GLIBCXX17_CONSTEXPR void"}
{"code":"V835","currLine":"      eq(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT","falseAlarm":false,"level":3,"message":"Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, pass the first argument by value.","nextLine":"      { return __c1 == __c2; }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\char_traits.h","lines":[467]}],"prevLine":"      static _GLIBCXX_CONSTEXPR bool"}
{"code":"V835","currLine":"      eq(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT","falseAlarm":false,"level":3,"message":"Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, pass the second argument by value.","nextLine":"      { return __c1 == __c2; }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\char_traits.h","lines":[467]}],"prevLine":"      static _GLIBCXX_CONSTEXPR bool"}
{"code":"V835","currLine":"      lt(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT","falseAlarm":false,"level":3,"message":"Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, pass the first argument by value.","nextLine":"      { return __c1 < __c2; }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\char_traits.h","lines":[471]}],"prevLine":"      static _GLIBCXX_CONSTEXPR bool"}
{"code":"V835","currLine":"      lt(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT","falseAlarm":false,"level":3,"message":"Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, pass the second argument by value.","nextLine":"      { return __c1 < __c2; }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\char_traits.h","lines":[471]}],"prevLine":"      static _GLIBCXX_CONSTEXPR bool"}
{"code":"V835","currLine":"      find(const char_type* __s, size_t __n, const char_type& __a)","falseAlarm":false,"level":3,"message":"Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, pass the third argument by value.","nextLine":"      {","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\char_traits.h","lines":[499]}],"prevLine":"      static _GLIBCXX17_CONSTEXPR const char_type*"}
{"code":"V835","currLine":"      to_char_type(const int_type& __c) _GLIBCXX_NOEXCEPT","falseAlarm":false,"level":3,"message":"Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, pass the first argument by value.","nextLine":"      { return char_type(__c); }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\char_traits.h","lines":[549]}],"prevLine":"      static _GLIBCXX_CONSTEXPR char_type"}
{"code":"V835","currLine":"      to_int_type(const char_type& __c) _GLIBCXX_NOEXCEPT","falseAlarm":false,"level":3,"message":"Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, pass the first argument by value.","nextLine":"      { return int_type(__c); }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\char_traits.h","lines":[553]}],"prevLine":"      static _GLIBCXX_CONSTEXPR int_type"}
{"code":"V835","currLine":"      eq_int_type(const int_type& __c1, const int_type& __c2) _GLIBCXX_NOEXCEPT","falseAlarm":false,"level":3,"message":"Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, pass the first argument by value.","nextLine":"      { return __c1 == __c2; }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\char_traits.h","lines":[557]}],"prevLine":"      static _GLIBCXX_CONSTEXPR bool"}
{"code":"V835","currLine":"      eq_int_type(const int_type& __c1, const int_type& __c2) _GLIBCXX_NOEXCEPT","falseAlarm":false,"level":3,"message":"Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, pass the second argument by value.","nextLine":"      { return __c1 == __c2; }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\char_traits.h","lines":[557]}],"prevLine":"      static _GLIBCXX_CONSTEXPR bool"}
{"code":"V835","currLine":"      not_eof(const int_type& __c) _GLIBCXX_NOEXCEPT","falseAlarm":false,"level":3,"message":"Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, pass the first argument by value.","nextLine":"      { return eq_int_type(__c, eof()) ? 0 : __c; }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\char_traits.h","lines":[565]}],"prevLine":"      static _GLIBCXX_CONSTEXPR int_type"}
{"code":"V835","currLine":"      assign(char_type& __c1, const char_type& __c2) noexcept","falseAlarm":false,"level":3,"message":"Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, pass the second argument by value.","nextLine":"      { __c1 = __c2; }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\char_traits.h","lines":[724]}],"prevLine":"      static _GLIBCXX17_CONSTEXPR void"}
{"code":"V835","currLine":"      eq(const char_type& __c1, const char_type& __c2) noexcept","falseAlarm":false,"level":3,"message":"Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, pass the first argument by value.","nextLine":"      { return __c1 == __c2; }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\char_traits.h","lines":[728]}],"prevLine":"      static constexpr bool"}
{"code":"V835","currLine":"      eq(const char_type& __c1, const char_type& __c2) noexcept","falseAlarm":false,"level":3,"message":"Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, pass the second argument by value.","nextLine":"      { return __c1 == __c2; }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\char_traits.h","lines":[728]}],"prevLine":"      static constexpr bool"}
{"code":"V835","currLine":"      lt(const char_type& __c1, const char_type& __c2) noexcept","falseAlarm":false,"level":3,"message":"Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, pass the first argument by value.","nextLine":"      { return __c1 < __c2; }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\char_traits.h","lines":[732]}],"prevLine":"      static constexpr bool"}
{"code":"V835","currLine":"      lt(const char_type& __c1, const char_type& __c2) noexcept","falseAlarm":false,"level":3,"message":"Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, pass the second argument by value.","nextLine":"      { return __c1 < __c2; }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\char_traits.h","lines":[732]}],"prevLine":"      static constexpr bool"}
{"code":"V835","currLine":"      find(const char_type* __s, size_t __n, const char_type& __a)","falseAlarm":false,"level":3,"message":"Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, pass the third argument by value.","nextLine":"      {","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\char_traits.h","lines":[756]}],"prevLine":"      static _GLIBCXX17_CONSTEXPR const char_type*"}
{"code":"V835","currLine":"      to_char_type(const int_type& __c) noexcept","falseAlarm":false,"level":3,"message":"Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, pass the first argument by value.","nextLine":"      { return char_type(__c); }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\char_traits.h","lines":[799]}],"prevLine":"      static constexpr char_type"}
{"code":"V835","currLine":"      to_int_type(const char_type& __c) noexcept","falseAlarm":false,"level":3,"message":"Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, pass the first argument by value.","nextLine":"      { return __c == eof() ? int_type(0xfffd) : int_type(__c); }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\char_traits.h","lines":[803]}],"prevLine":"      static constexpr int_type"}
{"code":"V835","currLine":"      eq_int_type(const int_type& __c1, const int_type& __c2) noexcept","falseAlarm":false,"level":3,"message":"Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, pass the first argument by value.","nextLine":"      { return __c1 == __c2; }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\char_traits.h","lines":[807]}],"prevLine":"      static constexpr bool"}
{"code":"V835","currLine":"      eq_int_type(const int_type& __c1, const int_type& __c2) noexcept","falseAlarm":false,"level":3,"message":"Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, pass the second argument by value.","nextLine":"      { return __c1 == __c2; }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\char_traits.h","lines":[807]}],"prevLine":"      static constexpr bool"}
{"code":"V835","currLine":"      not_eof(const int_type& __c) noexcept","falseAlarm":false,"level":3,"message":"Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, pass the first argument by value.","nextLine":"      { return eq_int_type(__c, eof()) ? 0 : __c; }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\char_traits.h","lines":[815]}],"prevLine":"      static constexpr int_type"}
{"code":"V835","currLine":"      assign(char_type& __c1, const char_type& __c2) noexcept","falseAlarm":false,"level":3,"message":"Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, pass the second argument by value.","nextLine":"      { __c1 = __c2; }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\char_traits.h","lines":[838]}],"prevLine":"      static _GLIBCXX17_CONSTEXPR void"}
{"code":"V835","currLine":"      eq(const char_type& __c1, const char_type& __c2) noexcept","falseAlarm":false,"level":3,"message":"Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, pass the first argument by value.","nextLine":"      { return __c1 == __c2; }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\char_traits.h","lines":[842]}],"prevLine":"      static constexpr bool"}
{"code":"V835","currLine":"      eq(const char_type& __c1, const char_type& __c2) noexcept","falseAlarm":false,"level":3,"message":"Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, pass the second argument by value.","nextLine":"      { return __c1 == __c2; }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\char_traits.h","lines":[842]}],"prevLine":"      static constexpr bool"}
{"code":"V835","currLine":"      lt(const char_type& __c1, const char_type& __c2) noexcept","falseAlarm":false,"level":3,"message":"Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, pass the first argument by value.","nextLine":"      { return __c1 < __c2; }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\char_traits.h","lines":[846]}],"prevLine":"      static constexpr bool"}
{"code":"V835","currLine":"      lt(const char_type& __c1, const char_type& __c2) noexcept","falseAlarm":false,"level":3,"message":"Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, pass the second argument by value.","nextLine":"      { return __c1 < __c2; }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\char_traits.h","lines":[846]}],"prevLine":"      static constexpr bool"}
{"code":"V835","currLine":"      find(const char_type* __s, size_t __n, const char_type& __a)","falseAlarm":false,"level":3,"message":"Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, pass the third argument by value.","nextLine":"      {","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\char_traits.h","lines":[870]}],"prevLine":"      static _GLIBCXX17_CONSTEXPR const char_type*"}
{"code":"V835","currLine":"      to_char_type(const int_type& __c) noexcept","falseAlarm":false,"level":3,"message":"Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, pass the first argument by value.","nextLine":"      { return char_type(__c); }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\char_traits.h","lines":[913]}],"prevLine":"      static constexpr char_type"}
{"code":"V835","currLine":"      to_int_type(const char_type& __c) noexcept","falseAlarm":false,"level":3,"message":"Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, pass the first argument by value.","nextLine":"      { return int_type(__c); }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\char_traits.h","lines":[917]}],"prevLine":"      static constexpr int_type"}
{"code":"V835","currLine":"      eq_int_type(const int_type& __c1, const int_type& __c2) noexcept","falseAlarm":false,"level":3,"message":"Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, pass the first argument by value.","nextLine":"      { return __c1 == __c2; }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\char_traits.h","lines":[921]}],"prevLine":"      static constexpr bool"}
{"code":"V835","currLine":"      eq_int_type(const int_type& __c1, const int_type& __c2) noexcept","falseAlarm":false,"level":3,"message":"Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, pass the second argument by value.","nextLine":"      { return __c1 == __c2; }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\char_traits.h","lines":[921]}],"prevLine":"      static constexpr bool"}
{"code":"V835","currLine":"      not_eof(const int_type& __c) noexcept","falseAlarm":false,"level":3,"message":"Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, pass the first argument by value.","nextLine":"      { return eq_int_type(__c, eof()) ? 0 : __c; }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\char_traits.h","lines":[929]}],"prevLine":"      static constexpr int_type"}
{"code":"V677","currLine":"  __MINGW_EXTENSION typedef __int64 fpos_t;","falseAlarm":false,"level":2,"message":"Custom declaration of a standard 'fpos_t' type. The declaration from system header files should be used instead.","nextLine":"#define _FPOSOFF(fp) ((long)(fp))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\stdio.h","lines":[115]}],"prevLine":"#if (!defined(NO_OLDNAMES) || defined(__GNUC__))","sastId":"CERT-DCL37-C"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\x86_64-w64-mingw32\\bits\\c++locale.h","lines":[45]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V575","currLine":"    if (__builtin_strcmp(__old, \"C\"))","cwe":628,"falseAlarm":false,"level":3,"message":"The potential null pointer is passed into '__builtin_strcmp' function. Inspect the first argument.","nextLine":"      {","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\x86_64-w64-mingw32\\bits\\c++locale.h","lines":[62]}],"prevLine":"    char* __sav = 0;","sastId":"CERT-EXP37-C"}
{"code":"V526","currLine":"    if (__builtin_strcmp(__old, \"C\"))","cwe":253,"falseAlarm":false,"level":3,"message":"The '__builtin_strcmp' function returns 0 if corresponding strings are equal. Consider examining the condition for mistakes.","nextLine":"      {","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\x86_64-w64-mingw32\\bits\\c++locale.h","lines":[62]}],"prevLine":"    char* __sav = 0;"}
{"code":"V835","currLine":"  __convert_from_v(const __c_locale&, char* ___out,","falseAlarm":false,"level":3,"message":"Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, pass the first argument by value.","nextLine":"     const int __size __attribute__((__unused__)),","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\x86_64-w64-mingw32\\bits\\c++locale.h","lines":[56]}],"prevLine":"  inline int"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\localefwd.h","lines":[44]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V677","currLine":"typedef int (__cdecl *_onexit_t)(void);","falseAlarm":false,"level":2,"message":"Custom declaration of a standard '_onexit_t' type. The declaration from system header files should be used instead.","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\corecrt_startup.h","lines":[30]}],"sastId":"CERT-DCL37-C"}
{"code":"V677","currLine":"  typedef int sig_atomic_t;","falseAlarm":false,"level":2,"message":"Custom declaration of a standard 'sig_atomic_t' type. The declaration from system header files should be used instead.","nextLine":"#endif","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\signal.h","lines":[18]}],"prevLine":"#define _SIG_ATOMIC_T_DEFINED","sastId":"CERT-DCL37-C"}
{"code":"V677","currLine":"  typedef long clock_t;","falseAlarm":false,"level":2,"message":"Custom declaration of a standard 'clock_t' type. The declaration from system header files should be used instead.","nextLine":"#endif","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\time.h","lines":[60]}],"prevLine":"#define _CLOCK_T_DEFINED","sastId":"CERT-DCL37-C"}
{"code":"V802","currLine":"{","falseAlarm":false,"level":2,"message":"On 64-bit platform, structure size can be reduced from 32 to 24 bytes by rearranging the fields according to their sizes in decreasing order.","nextLine":"    unsigned p_state;","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\pthread.h","lines":[240]}],"prevLine":"struct pthread_attr_t"}
{"code":"V832","currLine":"      new_allocator() _GLIBCXX_USE_NOEXCEPT { }","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty constructor body.","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\ext\\new_allocator.h","lines":[79]}],"prevLine":"      _GLIBCXX20_CONSTEXPR"}
{"code":"V832","currLine":"      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty destructor body.","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\ext\\new_allocator.h","lines":[89]}],"prevLine":"#if __cplusplus <= 201703L"}
{"code":"V832","currLine":"      allocator() _GLIBCXX_NOTHROW { }","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty constructor body.","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\allocator.h","lines":[168]}],"prevLine":"      _GLIBCXX20_CONSTEXPR"}
{"code":"V832","currLine":"      ~allocator() _GLIBCXX_NOTHROW { }","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty destructor body.","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\allocator.h","lines":[186]}],"prevLine":"#endif"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\allocator.h","lines":[54]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\ostream_insert.h","lines":[39]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\stl_function.h","lines":[63]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V832","currLine":"      pointer_to_unary_function() { }","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty constructor body.","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\stl_function.h","lines":[1086]}],"prevLine":"    public:"}
{"code":"V832","currLine":"      pointer_to_binary_function() { }","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty constructor body.","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\stl_function.h","lines":[1112]}],"prevLine":"    public:"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\backward\\binders.h","lines":[63]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\initializer_list","lines":[43]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\range_access.h","lines":[40]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\stl_construct.h","lines":[73]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\alloc_traits.h","lines":[41]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V659","currLine":"      at(size_type __n)","falseAlarm":false,"level":3,"message":"Declarations of functions with 'at' name differ in the 'const' keyword only, but the bodies of these functions have different composition. This is suspicious and can possibly be an error. Check lines: 1075, 1096.","nextLine":"      {","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\basic_string.h","lines":[1096,1075]}],"prevLine":"      reference"}
{"code":"V553","currLine":"    class basic_string","falseAlarm":false,"level":3,"message":"The length of 'basic_string' class's declaration is more than 2000 lines long. You should consider refactoring the code.","nextLine":"    {","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\basic_string.h","lines":[85]}],"prevLine":"  template<typename _CharT, typename _Traits, typename _Alloc>"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\basic_string.h","lines":[51]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V677","currLine":"  typedef int (__cdecl *_onexit_t)(void);","falseAlarm":false,"level":2,"message":"Custom declaration of a standard '_onexit_t' type. The declaration from system header files should be used instead.","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\stdlib.h","lines":[50]}],"sastId":"CERT-DCL37-C"}
{"code":"V677","currLine":"  } div_t;","falseAlarm":false,"level":2,"message":"Custom declaration of a standard 'div_t' type. The declaration from system header files should be used instead.","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\stdlib.h","lines":[63]}],"prevLine":"    int rem;","sastId":"CERT-DCL37-C"}
{"code":"V677","currLine":"  } ldiv_t;","falseAlarm":false,"level":2,"message":"Custom declaration of a standard 'ldiv_t' type. The declaration from system header files should be used instead.","nextLine":"#endif","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\stdlib.h","lines":[68]}],"prevLine":"    long rem;","sastId":"CERT-DCL37-C"}
{"code":"V677","currLine":"  } _LDOUBLE;","falseAlarm":false,"level":2,"message":"Custom declaration of a standard '_LDOUBLE' type. The declaration from system header files should be used instead.","nextLine":"#pragma pack()","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\stdlib.h","lines":[77]}],"prevLine":"    unsigned char ld[10];","sastId":"CERT-DCL37-C"}
{"code":"V677","currLine":"  } _LONGDOUBLE;","falseAlarm":false,"level":2,"message":"Custom declaration of a standard '_LONGDOUBLE' type. The declaration from system header files should be used instead.","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\stdlib.h","lines":[95]}],"prevLine":"    long double x;","sastId":"CERT-DCL37-C"}
{"code":"V677","currLine":"  } _LDBL12;","falseAlarm":false,"level":2,"message":"Custom declaration of a standard '_LDBL12' type. The declaration from system header files should be used instead.","nextLine":"#pragma pack()","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\stdlib.h","lines":[102]}],"prevLine":"    unsigned char ld12[12];","sastId":"CERT-DCL37-C"}
{"code":"V677","currLine":"  typedef void (__cdecl *_purecall_handler)(void);","falseAlarm":false,"level":2,"message":"Custom declaration of a standard '_purecall_handler' type. The declaration from system header files should be used instead.","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\stdlib.h","lines":[143]}],"sastId":"CERT-DCL37-C"}
{"code":"V677","currLine":"  } _HEAPINFO;","falseAlarm":false,"level":2,"message":"Custom declaration of a standard '_HEAPINFO' type. The declaration from system header files should be used instead.","nextLine":"#endif","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\malloc.h","lines":[50]}],"prevLine":"    int _useflag;","sastId":"CERT-DCL37-C"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\std_abs.h","lines":[48]}],"prevLine":"{","sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\cstdlib","lines":[123]}],"prevLine":"{","sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\charconv.h","lines":[39]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\basic_string.h","lines":[6610]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\functional_hash.h","lines":[38]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V690","currLine":"    struct __poison_hash","falseAlarm":false,"level":3,"message":"The move constructor is declared as private in the '__poison_hash' class, but the default move assignment operator will still be generated by compiler. It is dangerous to use such a class.","nextLine":"    {","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\functional_hash.h","lines":[62]}],"prevLine":"  template<typename _Tp, typename = void>"}
{"code":"V550","currLine":" return __val != 0.0f ? std::_Hash_impl::hash(__val) : 0;","cwe":682,"falseAlarm":false,"level":3,"message":"An odd precise comparison: __val != 0.0f. It's probably better to use a comparison with defined precision: fabs(A - B) > Epsilon.","nextLine":"      }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\functional_hash.h","lines":[238]}],"prevLine":" // 0 and -0 both hash to zero.","sastId":"CERT-FLP02-C"}
{"code":"V550","currLine":" return __val != 0.0 ? std::_Hash_impl::hash(__val) : 0;","cwe":682,"falseAlarm":false,"level":3,"message":"An odd precise comparison: __val != 0.0. It's probably better to use a comparison with defined precision: fabs(A - B) > Epsilon.","nextLine":"      }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\functional_hash.h","lines":[250]}],"prevLine":" // 0 and -0 both hash to zero.","sastId":"CERT-FLP02-C"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\basic_string.h","lines":[6861]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\basic_string.tcc","lines":[46]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V565","currLine":"   { /* swallow the exception */ }","cwe":544,"falseAlarm":false,"level":3,"message":"An empty exception handler. Silent suppression of exceptions can hide the presence of bugs in source code during testing.","nextLine":"#endif","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\basic_string.tcc","lines":[366]}],"prevLine":" catch (...)","sastId":"CERT-ERR56-CPP"}
{"code":"V797","currLine":"       if (traits_type::find(__s, __n, _M_data()[__size]))","cwe":253,"falseAlarm":false,"level":1,"message":"The 'find' function is used as if it returned a bool type. The return value of the function should probably be compared with std::string::npos.","nextLine":"  return __size;","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\basic_string.tcc","lines":[1328]}],"prevLine":"     {","sastId":"CERT-EXP12-C"}
{"code":"V797","currLine":" if (!traits_type::find(__s, __n, _M_data()[__pos]))","cwe":253,"falseAlarm":false,"level":1,"message":"The 'find' function is used as if it returned a bool type. The return value of the function should probably be compared with std::string::npos.","nextLine":"   return __pos;","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\basic_string.tcc","lines":[1344]}],"prevLine":"      for (; __pos < this->size(); ++__pos)","sastId":"CERT-EXP12-C"}
{"code":"V797","currLine":"       if (!traits_type::find(__s, __n, _M_data()[__size]))","cwe":253,"falseAlarm":false,"level":1,"message":"The 'find' function is used as if it returned a bool type. The return value of the function should probably be compared with std::string::npos.","nextLine":"  return __size;","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\basic_string.tcc","lines":[1374]}],"prevLine":"     {","sastId":"CERT-EXP12-C"}
{"code":"V807","currLine":"       __int_type __c = ___in.rdbuf()->sgetc();","falseAlarm":false,"level":3,"message":"Decreased performance. Consider creating a pointer to avoid using the '___in.rdbuf()' expression repeatedly.","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\basic_string.tcc","lines":[1577,1585,1593]}],"prevLine":"       const __int_type __eof = _Traits::eof();"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\locale_classes.h","lines":[43]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V565","currLine":"     { }","cwe":544,"falseAlarm":false,"level":3,"message":"An empty exception handler. Silent suppression of exceptions can hide the presence of bugs in source code during testing.","nextLine":" }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\locale_classes.h","lines":[462]}],"prevLine":"   __catch(...)","sastId":"CERT-ERR56-CPP"}
{"code":"V832","currLine":"    id() { }","falseAlarm":false,"level":1,"message":"It's better to use '= default;' syntax instead of empty constructor body.","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\locale_classes.h","lines":[516]}],"prevLine":"    /// Constructor."}
{"code":"V565","currLine":"     { }","cwe":544,"falseAlarm":false,"level":3,"message":"An empty exception handler. Silent suppression of exceptions can hide the presence of bugs in source code during testing.","nextLine":" }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\locale_classes.h","lines":[572]}],"prevLine":"   __catch(...)","sastId":"CERT-ERR56-CPP"}
{"code":"V832","currLine":"      virtual","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty destructor body.","nextLine":"      ~collate_byname() { }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\locale_classes.h","lines":[850]}],"prevLine":"    protected:"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\locale_classes.tcc","lines":[39]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\x86_64-w64-mingw32\\bits\\error_constants.h","lines":[36]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\stdexcept","lines":[41]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\system_error","lines":[46]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\ios_base.h","lines":[49]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\streambuf","lines":[45]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V832","currLine":"      virtual","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty destructor body.","nextLine":"      ~basic_streambuf()","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\streambuf","lines":[201]}],"prevLine":"      /// Destructor deallocates no buffer space."}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\streambuf.tcc","lines":[39]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V677","currLine":"  typedef wchar_t wctrans_t;","falseAlarm":false,"level":2,"message":"Custom declaration of a standard 'wctrans_t' type. The declaration from system header files should be used instead.","nextLine":"  wint_t __cdecl towctrans(wint_t,wctrans_t);","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\wctype.h","lines":[176]}],"sastId":"CERT-DCL37-C"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\x86_64-w64-mingw32\\bits\\ctype_base.h","lines":[37]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\streambuf_iterator.h","lines":[38]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\locale_facets.h","lines":[50]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V832","currLine":"      virtual","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty destructor body.","nextLine":"      ~__ctype_abstract_base() { }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\locale_facets.h","lines":[364]}]}
{"code":"V832","currLine":"      virtual","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty destructor body.","nextLine":"      ~ctype_byname() { }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\locale_facets.h","lines":[1496]}],"prevLine":"    protected:"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\x86_64-w64-mingw32\\bits\\ctype_inline.h","lines":[37]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\locale_facets.h","lines":[1543]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V832","currLine":"      virtual","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty destructor body.","nextLine":"      ~numpunct_byname() { }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\locale_facets.h","lines":[1933]}],"prevLine":"    protected:"}
{"code":"V832","currLine":"      virtual ~num_get() { }","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty destructor body.","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\locale_facets.h","lines":[2148]}],"prevLine":"      /// Destructor."}
{"code":"V832","currLine":"      virtual","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty destructor body.","nextLine":"      ~num_put() { }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\locale_facets.h","lines":[2512]}],"prevLine":"      /// Destructor."}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\locale_facets.tcc","lines":[35]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\basic_ios.h","lines":[41]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V667","currLine":"   __throw_exception_again;","cwe":480,"falseAlarm":false,"level":3,"message":"The 'throw' operator does not possess any arguments and is not situated within the 'catch' block.","nextLine":"      }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\basic_ios.h","lines":[170]}],"prevLine":" if (this->exceptions() & __state)","sastId":"CERT-ERR50-CPP"}
{"code":"V832","currLine":"      virtual","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty destructor body.","nextLine":"      ~basic_ios() { }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\basic_ios.h","lines":[281]}],"prevLine":"      */"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\basic_ios.tcc","lines":[35]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V832","currLine":"      virtual","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty destructor body.","nextLine":"      ~basic_ostream() { }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\ostream","lines":[92]}],"prevLine":"      */"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\ostream","lines":[41]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\ostream.tcc","lines":[41]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\istream","lines":[41]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V755","currLine":"    { return ___in >> reinterpret_cast<char*>(__s); }","cwe":123,"falseAlarm":false,"level":2,"message":"Copying potentially tainted data from '___in' to buffer '__s'. Buffer overflow is possible.","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\istream","lines":[826]}],"prevLine":"    operator>>(basic_istream<char, _Traits>& ___in, unsigned char* __s)","sastId":"CERT-STR31-C"}
{"code":"V755","currLine":"    { return ___in >> reinterpret_cast<char*>(__s); }","cwe":123,"falseAlarm":false,"level":2,"message":"Copying potentially tainted data from '___in' to buffer '__s'. Buffer overflow is possible.","nextLine":"#else","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\istream","lines":[832]}],"prevLine":"    operator>>(basic_istream<char, _Traits>& ___in, signed char* __s)","sastId":"CERT-STR31-C"}
{"code":"V832","currLine":"      virtual","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty destructor body.","nextLine":"      ~basic_iostream() { }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\istream","lines":[900]}],"prevLine":"      */"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\istream.tcc","lines":[41]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\iostream","lines":[42]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\stl_tree.h","lines":[75]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V690","currLine":"    struct _Rb_tree_key_compare","falseAlarm":false,"level":3,"message":"The '_Rb_tree_key_compare' class implements a move constructor, but lacks the move assignment operator. It is dangerous to use such a class.","nextLine":"    {","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\stl_tree.h","lines":[142]}],"prevLine":"  template<typename _Key_compare>"}
{"code":"V690","currLine":"  struct _Rb_tree_header","falseAlarm":false,"level":3,"message":"The '_Rb_tree_header' class implements a move constructor, but lacks the move assignment operator. It is dangerous to use such a class.","nextLine":"  {","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\stl_tree.h","lines":[168]}],"prevLine":"  // Helper type to manage default initialization of node count and header."}
{"code":"V808","currLine":"   _Alloc_node __an(*this);","falseAlarm":false,"level":1,"message":"'__an' object of '_Alloc_node' type was created but was not utilized.","nextLine":"   for (; __first != __last; ++__first)","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\stl_tree.h","lines":[1126]}],"prevLine":" {"}
{"code":"V690","currLine":"    class _Rb_tree","falseAlarm":false,"level":3,"message":"The '_Rb_tree' class implements the move assignment operator, but lacks a move constructor. It is dangerous to use such a class.","nextLine":"    {","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\stl_tree.h","lines":[425]}],"prevLine":"    typename _Compare, typename _Alloc = allocator<_Val> >"}
{"code":"V821","currLine":"      _Reuse_or_alloc_node __roan(*this);","falseAlarm":false,"level":3,"message":"Decreased performance. The '__roan' variable can be constructed in a lower level scope.","nextLine":"      _M_impl._M_reset();","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\stl_tree.h","lines":[1677,1680]}],"prevLine":"      // structure.","sastId":"CERT-DCL19-C"}
{"code":"V821","currLine":"   _Reuse_or_alloc_node __roan(*this);","falseAlarm":false,"level":3,"message":"Decreased performance. The '__roan' variable can be constructed in a lower level scope.","nextLine":"   _M_impl._M_reset();","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\stl_tree.h","lines":[1751,1755]}],"sastId":"CERT-DCL19-C"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\stl_relops.h","lines":[67]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\utility","lines":[82]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V833","currLine":"    { return std::move(__p.first); }","falseAlarm":false,"level":2,"message":"Passing the const-qualified object '__p.first' to the 'std::move' function disables move semantics.","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\utility","lines":[263]}],"prevLine":"    get(const pair<_Tp, _Up>&& __p) noexcept"}
{"code":"V833","currLine":"    { return std::move(__p.second); }","falseAlarm":false,"level":2,"message":"Passing the const-qualified object '__p.second' to the 'std::move' function disables move semantics.","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\utility","lines":[283]}],"prevLine":"    get(const pair<_Up, _Tp>&& __p) noexcept"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\array","lines":[44]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V835","currLine":"     _S_ref(const _Type&, std::size_t) noexcept","falseAlarm":false,"level":3,"message":"Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, pass the first argument by value.","nextLine":"     { return *static_cast<_Tp*>(nullptr); }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\array","lines":[72]}],"prevLine":"     static constexpr _Tp&"}
{"code":"V835","currLine":"     _S_ptr(const _Type&) noexcept","falseAlarm":false,"level":3,"message":"Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, pass the first argument by value.","nextLine":"     { return nullptr; }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\array","lines":[76]}],"prevLine":"     static constexpr _Tp*"}
{"code":"V659","currLine":"      at(size_type __n) const","falseAlarm":false,"level":3,"message":"Declarations of functions with 'at' name differ in the 'const' keyword only, but the bodies of these functions have different composition. This is suspicious and can possibly be an error. Check lines: 202, 212.","nextLine":"      {","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\array","lines":[212,202]}],"prevLine":"      constexpr const_reference"}
{"code":"V659","currLine":"      front() const noexcept","falseAlarm":false,"level":3,"message":"Declarations of functions with 'front' name differ in the 'const' keyword only, but the bodies of these functions have different composition. This is suspicious and can possibly be an error. Check lines: 224, 231.","nextLine":"      {","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\array","lines":[231,224]}],"prevLine":"      constexpr const_reference"}
{"code":"V659","currLine":"      back() const noexcept","falseAlarm":false,"level":3,"message":"Declarations of functions with 'back' name differ in the 'const' keyword only, but the bodies of these functions have different composition. This is suspicious and can possibly be an error. Check lines: 240, 247.","nextLine":"      {","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\array","lines":[247,240]}],"prevLine":"      constexpr const_reference"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\uses_allocator.h","lines":[35]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\invoke.h","lines":[42]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\tuple","lines":[47]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\stl_map.h","lines":[66]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\stl_multimap.h","lines":[64]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\erase_if.h","lines":[39]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\cmath","lines":[79]}],"prevLine":"{","sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\algorithmfwd.h","lines":[42]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\stl_heap.h","lines":[62]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\stl_tempbuf.h","lines":[62]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\uniform_int_dist.h","lines":[41]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\stl_algo.h","lines":[71]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bitset","lines":[64]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V832","currLine":"      _GLIBCXX_CONSTEXPR _Base_bitset() _GLIBCXX_NOEXCEPT","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty constructor body.","nextLine":"      { }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bitset","lines":[527]}]}
{"code":"V509","currLine":" return *new _WordT;","cwe":703,"falseAlarm":false,"level":2,"message":"The 'new' operator is used in the noexcept '_M_getword' function. It should be located inside the try..catch block, as it could potentially generate an exception.","nextLine":"      }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bitset","lines":[564]}],"prevLine":" __throw_out_of_range(__N(\"_Base_bitset::_M_getword\"));","sastId":"CERT-DCL57-CPP"}
{"code":"V659","currLine":"      _M_getword(size_t) const _GLIBCXX_NOEXCEPT","falseAlarm":false,"level":3,"message":"Declarations of functions with '_M_getword' name differ in the 'const' keyword only, but the bodies of these functions have different composition. This is suspicious and can possibly be an error. Check lines: 560, 568.","nextLine":"      { return 0; }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bitset","lines":[568,560]}],"prevLine":"      _GLIBCXX_CONSTEXPR _WordT"}
{"code":"V832","currLine":" ~reference() _GLIBCXX_NOEXCEPT","falseAlarm":false,"level":1,"message":"It's better to use '= default;' syntax instead of empty destructor body.","nextLine":" { }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bitset","lines":[823]}]}
{"code":"V690","currLine":"      class reference","falseAlarm":false,"level":2,"message":"The 'reference' class implements the copy assignment operator, but lacks a copy constructor. It is dangerous to use such a class.","nextLine":"      {","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bitset","lines":[802]}],"prevLine":"       */"}
{"code":"V832","currLine":"      _GLIBCXX_CONSTEXPR bitset() _GLIBCXX_NOEXCEPT","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty constructor body.","nextLine":"      { }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bitset","lines":[869]}],"prevLine":"      /// All bits set to zero."}
{"code":"V690","currLine":"    class istream_iterator","falseAlarm":false,"level":2,"message":"The 'istream_iterator' class implements a copy constructor, but lacks the copy assignment operator. It is dangerous to use such a class.","nextLine":"    : public iterator<input_iterator_tag, _Tp, _Dist, const _Tp*, const _Tp&>","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\stream_iterator.h","lines":[49]}],"prevLine":"           typename _Traits = char_traits<_CharT>, typename _Dist = ptrdiff_t>"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\stream_iterator.h","lines":[37]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V690","currLine":"    class ostream_iterator","falseAlarm":false,"level":2,"message":"The 'ostream_iterator' class implements a copy constructor, but lacks the copy assignment operator. It is dangerous to use such a class.","nextLine":"    : public iterator<output_iterator_tag, void, void, void, void>","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\stream_iterator.h","lines":[176]}],"prevLine":"           typename _Traits = char_traits<_CharT> >"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\locale_facets_nonio.h","lines":[41]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\x86_64-w64-mingw32\\bits\\time_members.h","lines":[37]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V832","currLine":"      virtual","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty destructor body.","nextLine":"      ~time_get() { }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\locale_facets_nonio.h","lines":[592]}],"prevLine":"      /// Destructor."}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\locale_facets_nonio.h","lines":[348]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V832","currLine":"      virtual","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty destructor body.","nextLine":"      ~time_get_byname() { }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\locale_facets_nonio.h","lines":[778]}],"prevLine":"    protected:"}
{"code":"V832","currLine":"      virtual","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty destructor body.","nextLine":"      ~time_put()","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\locale_facets_nonio.h","lines":[863]}],"prevLine":"      /// Destructor."}
{"code":"V832","currLine":"      virtual","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty destructor body.","nextLine":"      ~time_put_byname() { }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\locale_facets_nonio.h","lines":[912]}],"prevLine":"    protected:"}
{"code":"V832","currLine":"      virtual","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty destructor body.","nextLine":"      ~moneypunct_byname() { }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\locale_facets_nonio.h","lines":[1443]}],"prevLine":"    protected:"}
{"code":"V832","currLine":"      virtual","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty destructor body.","nextLine":"      ~money_get() { }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\locale_facets_nonio.h","lines":[1557]}],"prevLine":"      /// Destructor."}
{"code":"V832","currLine":"      virtual","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty destructor body.","nextLine":"      ~money_put() { }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\locale_facets_nonio.h","lines":[1699]}],"prevLine":"      /// Destructor."}
{"code":"V832","currLine":"      virtual","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty destructor body.","nextLine":"      ~messages_byname()","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\locale_facets_nonio.h","lines":[2015]}],"prevLine":"    protected:"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\x86_64-w64-mingw32\\bits\\messages_members.h","lines":[36]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\codecvt.h","lines":[44]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V832","currLine":"      virtual","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty destructor body.","nextLine":"      ~__codecvt_abstract_base() { }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\codecvt.h","lines":[229]}]}
{"code":"V832","currLine":"      virtual","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty destructor body.","nextLine":"      ~codecvt() { }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\codecvt.h","lines":[303]}],"prevLine":"    protected:"}
{"code":"V832","currLine":"      virtual","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty destructor body.","nextLine":"      ~codecvt_byname() { }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\codecvt.h","lines":[721]}],"prevLine":"    protected:"}
{"code":"V832","currLine":"      virtual","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty destructor body.","nextLine":"      ~codecvt_byname() { }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\codecvt.h","lines":[740]}],"prevLine":"    protected:"}
{"code":"V832","currLine":"      virtual","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty destructor body.","nextLine":"      ~codecvt_byname() { }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\codecvt.h","lines":[758]}],"prevLine":"    protected:"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\locale_facets_nonio.tcc","lines":[35]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V522","currLine":"       if (__pos >= __matches_lengths[__i])","cwe":690,"falseAlarm":false,"level":3,"message":"There might be dereferencing of a potential null pointer '__matches_lengths'.","nextLine":"  ++__nskipped, ++__i;","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\locale_facets_nonio.tcc","lines":[1088]}],"prevLine":"       const char_type* __name = __names[__matches[__i]];","sastId":"CERT-MEM52-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\unique_ptr.h","lines":[45]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V824","currLine":"    { return unique_ptr<_Tp>(new _Tp(std::forward<_Args>(__args)...)); }","falseAlarm":false,"level":1,"message":"It is recommended to use the 'make_unique' function to create smart pointers.","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\unique_ptr.h","lines":[962]}],"prevLine":"    make_unique(_Args&&... __args)"}
{"code":"V824","currLine":"    { return unique_ptr<_Tp>(new remove_extent_t<_Tp>[__num]()); }","falseAlarm":false,"level":1,"message":"It is recommended to use the 'make_unique' function to create smart pointers.","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\unique_ptr.h","lines":[968]}],"prevLine":"    make_unique(size_t __num)"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\locale_conv.h","lines":[43]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1009","currLine":" char __bytes[2] = { __byte };","cwe":665,"falseAlarm":false,"level":2,"message":"Check the array initialization. Only the first element is initialized explicitly. The rest elements are initialized with zeros.","nextLine":" return from_bytes(__bytes, __bytes+1);","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\locale_conv.h","lines":[298]}],"prevLine":"      {"}
{"code":"V560","currLine":" if (this->gptr() < this->egptr() || (_M_buf && _M_conv_get()))","cwe":571,"falseAlarm":false,"level":2,"message":"A part of conditional expression is always true: _M_buf.","nextLine":"   return _Tr::to_int_type(*this->gptr());","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\locale_conv.h","lines":[465]}]}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\stl_uninitialized.h","lines":[70]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\stl_raw_storage_iter.h","lines":[59]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bit","lines":[55]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\align.h","lines":[39]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V690","currLine":"    struct __allocated_ptr","falseAlarm":false,"level":2,"message":"The '__allocated_ptr' class implements a move constructor, but lacks the move assignment operator. It is dangerous to use such a class.","nextLine":"    {","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\allocated_ptr.h","lines":[46]}],"prevLine":"  template<typename _Alloc>"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\allocated_ptr.h","lines":[40]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\refwrap.h","lines":[43]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V832","currLine":"    __recursive_mutex() ","falseAlarm":false,"level":1,"message":"It's better to use '= default;' syntax instead of empty constructor body.","nextLine":"    { ","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\ext\\concurrence.h","lines":[183]}],"prevLine":"  public:"}
{"code":"V832","currLine":"    __cond() ","falseAlarm":false,"level":1,"message":"It's better to use '= default;' syntax instead of empty constructor body.","nextLine":"    { ","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\ext\\concurrence.h","lines":[261]}],"prevLine":"  public:"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\shared_ptr_base.h","lines":[67]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V832","currLine":"      virtual","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty destructor body.","nextLine":"      ~_Sp_counted_base() noexcept","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\shared_ptr_base.h","lines":[129]}]}
{"code":"V832","currLine":"      ~_Sp_counted_deleter() noexcept { }","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty destructor body.","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\shared_ptr_base.h","lines":[438]}]}
{"code":"V1096","currLine":"      alignas(type_info) static constexpr char __tag[sizeof(type_info)] = { };","falseAlarm":false,"level":3,"message":"The '__tag' variable with static storage duration is declared inside the inline function with external linkage. This may lead to ODR violation.","nextLine":"      return reinterpret_cast<const type_info&>(__tag);","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\shared_ptr_base.h","lines":[481]}],"prevLine":"    {"}
{"code":"V832","currLine":"      ~_Sp_counted_ptr_inplace() noexcept { }","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty destructor body.","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\shared_ptr_base.h","lines":[523]}]}
{"code":"V522","currLine":" return *_M_get();","cwe":690,"falseAlarm":false,"level":3,"message":"There might be dereferencing of a potential null pointer '_M_get()'.","nextLine":"      }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\shared_ptr_base.h","lines":[980]}],"prevLine":" __glibcxx_assert(_M_get() != nullptr);","sastId":"CERT-MEM52-CPP"}
{"code":"V522","currLine":" return *_M_get();","cwe":690,"falseAlarm":false,"level":3,"message":"There might be dereferencing of a potential null pointer '_M_get()'.","nextLine":"      }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\shared_ptr_base.h","lines":[1025]}],"prevLine":" __glibcxx_assert(_M_get() != nullptr);","sastId":"CERT-MEM52-CPP"}
{"code":"V522","currLine":" return _M_get()[__i];","cwe":690,"falseAlarm":false,"level":3,"message":"There might be dereferencing of a potential null pointer '_M_get()'.","nextLine":"      }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\shared_ptr_base.h","lines":[1042]}],"prevLine":" __glibcxx_assert(!extent<_Tp>::value || __i < extent<_Tp>::value);","sastId":"CERT-MEM52-CPP"}
{"code":"V832","currLine":"      constexpr __enable_shared_from_this() noexcept { }","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty constructor body.","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\shared_ptr_base.h","lines":[1788]}],"prevLine":"    protected:"}
{"code":"V832","currLine":"      ~__enable_shared_from_this() { }","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty destructor body.","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\shared_ptr_base.h","lines":[1796]}]}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\shared_ptr.h","lines":[55]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V832","currLine":"      constexpr enable_shared_from_this() noexcept { }","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty constructor body.","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\shared_ptr.h","lines":[795]}],"prevLine":"    protected:"}
{"code":"V832","currLine":"      ~enable_shared_from_this() { }","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty destructor body.","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\shared_ptr.h","lines":[803]}]}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\atomic_base.h","lines":[48]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\shared_ptr_atomic.h","lines":[35]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\backward\\auto_ptr.h","lines":[36]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V794","currLine":"      {","falseAlarm":false,"level":2,"message":"The assignment operator should be protected from the case of 'this == &__a'.","nextLine":" reset(__a.release());","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\backward\\auto_ptr.h","lines":[139]}],"prevLine":"      operator=(auto_ptr& __a) throw()"}
{"code":"V522","currLine":" return *_M_ptr; ","cwe":690,"falseAlarm":false,"level":3,"message":"There might be dereferencing of a potential null pointer '_M_ptr'.","nextLine":"      }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\backward\\auto_ptr.h","lines":[186]}],"prevLine":" __glibcxx_assert(_M_ptr != 0);","sastId":"CERT-MEM52-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\memory","lines":[91]}],"prevLine":"#if __cplusplus >= 201103L","sastId":"CERT-DCL58-CPP"}
{"code":"V808","currLine":" __xfer_bufptrs __st{__rhs, this};","falseAlarm":false,"level":1,"message":"'__st' object of '__xfer_bufptrs' type was created but was not utilized.","nextLine":" const __streambuf_type& __base = __rhs;","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\sstream","lines":[208]}],"prevLine":"      {"}
{"code":"V808","currLine":" __xfer_bufptrs __l_st{*this, std::__addressof(__rhs)};","falseAlarm":false,"level":1,"message":"'__l_st' object of '__xfer_bufptrs' type was created but was not utilized.","nextLine":" __xfer_bufptrs __r_st{__rhs, this};","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\sstream","lines":[221]}],"prevLine":"      {"}
{"code":"V808","currLine":" __xfer_bufptrs __r_st{__rhs, this};","falseAlarm":false,"level":1,"message":"'__r_st' object of '__xfer_bufptrs' type was created but was not utilized.","nextLine":" __streambuf_type& __base = __rhs;","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\sstream","lines":[222]}],"prevLine":" __xfer_bufptrs __l_st{*this, std::__addressof(__rhs)};"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\sstream","lines":[48]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V832","currLine":"      ~basic_istringstream()","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty destructor body.","nextLine":"      { }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\sstream","lines":[615]}],"prevLine":"      */"}
{"code":"V832","currLine":"      ~basic_ostringstream()","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty destructor body.","nextLine":"      { }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\sstream","lines":[836]}],"prevLine":"      */"}
{"code":"V832","currLine":"      ~basic_stringstream()","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty destructor body.","nextLine":"      { }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\sstream","lines":[1053]}],"prevLine":"      */"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\sstream.tcc","lines":[39]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\stl_deque.h","lines":[72]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V690","currLine":"    struct _Deque_iterator","falseAlarm":false,"level":3,"message":"The '_Deque_iterator' class implements a copy constructor, but lacks the copy assignment operator. It is dangerous to use such a class.","nextLine":"    {","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\stl_deque.h","lines":[113]}],"prevLine":"  template<typename _Tp, typename _Ref, typename _Ptr>"}
{"code":"V690","currLine":"      struct _Deque_impl_data","falseAlarm":false,"level":3,"message":"The '_Deque_impl_data' class implements a move constructor, but lacks the move assignment operator. It is dangerous to use such a class.","nextLine":"      {","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\stl_deque.h","lines":[487]}]}
{"code":"V690","currLine":"    class _Deque_base","falseAlarm":false,"level":3,"message":"The '_Deque_base' class implements a move constructor, but lacks the move assignment operator. It is dangerous to use such a class.","nextLine":"    {","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\stl_deque.h","lines":[408]}],"prevLine":"  template<typename _Tp, typename _Alloc>"}
{"code":"V826","currLine":"      deque(deque&& __x, const allocator_type& __a, false_type)","falseAlarm":false,"level":3,"message":"Consider replacing the '__x' std::deque with std::vector. Contiguous placement of elements in memory can be more efficient.","nextLine":"      : _Base(std::move(__x), __a, __x.size())","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\stl_deque.h","lines":[930]}]}
{"code":"V826","currLine":"      _M_move_assign1(deque&& __x, /* always equal: */ true_type) noexcept","falseAlarm":false,"level":3,"message":"Consider replacing the '__x' std::deque with std::vector. Contiguous placement of elements in memory can be more efficient.","nextLine":"      {","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\stl_deque.h","lines":[2148]}],"prevLine":"      void"}
{"code":"V826","currLine":"      _M_move_assign2(deque&& __x, /* propagate: */ false_type)","falseAlarm":false,"level":3,"message":"Consider replacing the '__x' std::deque with std::vector. Contiguous placement of elements in memory can be more efficient.","nextLine":"      {","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\stl_deque.h","lines":[2203]}],"prevLine":"      void"}
{"code":"V826","currLine":"    operator==(const deque<_Tp, _Alloc>& __x, const deque<_Tp, _Alloc>& __y)","falseAlarm":false,"level":3,"message":"Consider replacing the '__y' std::deque with std::vector. Contiguous placement of elements in memory can be more efficient.","nextLine":"    { return __x.size() == __y.size()","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\stl_deque.h","lines":[2246]}],"prevLine":"    inline bool"}
{"code":"V826","currLine":"    operator==(const deque<_Tp, _Alloc>& __x, const deque<_Tp, _Alloc>& __y)","falseAlarm":false,"level":3,"message":"Consider replacing the '__x' std::deque with std::vector. Contiguous placement of elements in memory can be more efficient.","nextLine":"    { return __x.size() == __y.size()","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\stl_deque.h","lines":[2246]}],"prevLine":"    inline bool"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\deque.tcc","lines":[61]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V783","currLine":"     ++__front2;","cwe":119,"falseAlarm":false,"level":3,"message":"Dereferencing of the invalid iterator '__front2' might take place.","nextLine":"     __pos = this->_M_impl._M_start + __index;","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\deque.tcc","lines":[660]}],"prevLine":"     iterator __front2 = __front1;","sastId":"CERT-CTR51-CPP"}
{"code":"V783","currLine":"     _GLIBCXX_MOVE3(__front2, __pos1, __front1);","cwe":119,"falseAlarm":false,"level":3,"message":"Dereferencing of the invalid iterator '__front1' might take place.","nextLine":"   }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\deque.tcc","lines":[664]}],"prevLine":"     ++__pos1;","sastId":"CERT-CTR51-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\stl_stack.h","lines":[65]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V690","currLine":"      struct _Vector_impl_data","falseAlarm":false,"level":3,"message":"The '_Vector_impl_data' class implements a move constructor, but lacks the move assignment operator. It is dangerous to use such a class.","nextLine":"      {","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\stl_vector.h","lines":[91]}]}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\stl_vector.h","lines":[77]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\stl_bvector.h","lines":[64]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V690","currLine":"  struct _Bit_reference","falseAlarm":false,"level":2,"message":"The '_Bit_reference' class implements the copy assignment operator, but lacks a copy constructor. It is dangerous to use such a class.","nextLine":"  {","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\stl_bvector.h","lines":[72]}]}
{"code":"V690","currLine":"      struct _Bvector_impl_data","falseAlarm":false,"level":3,"message":"The '_Bvector_impl_data' class implements a move constructor, but lacks the move assignment operator. It is dangerous to use such a class.","nextLine":"      {","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\stl_bvector.h","lines":[428]}]}
{"code":"V769","currLine":"     const size_t __n = _M_impl._M_end_addr() - _M_impl._M_start._M_p;","cwe":119,"falseAlarm":false,"level":3,"message":"The '_M_impl._M_end_addr()' pointer in the expression could be nullptr. In such case, resulting value of arithmetic operations on this pointer will be senseless and it should not be used.","nextLine":"     _Bit_alloc_traits::deallocate(_M_impl,","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\stl_bvector.h","lines":[557]}],"prevLine":"   {","sastId":"CERT-EXP08-C"}
{"code":"V835","currLine":"      vector(size_type __n, const bool& __value,","falseAlarm":false,"level":3,"message":"Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, replace the second argument 'const bool& __value' with 'bool __value'.","nextLine":"      const allocator_type& __a = allocator_type())","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\stl_bvector.h","lines":[647]}]}
{"code":"V832","currLine":"      ~vector() _GLIBCXX_NOEXCEPT { }","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty destructor body.","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\stl_bvector.h","lines":[733]}]}
{"code":"V835","currLine":"      assign(size_type __n, const bool& __x)","falseAlarm":false,"level":3,"message":"Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, replace the second argument 'const bool& __x' with 'bool __x'.","nextLine":"      { _M_fill_assign(__n, __x); }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\stl_bvector.h","lines":[804]}],"prevLine":"      void"}
{"code":"V835","currLine":"      insert(const_iterator __position, const bool& __x = bool())","falseAlarm":false,"level":3,"message":"Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, replace the second argument 'const bool& __x' with 'bool __x'.","nextLine":"#else","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\stl_bvector.h","lines":[998]}],"prevLine":"#if __cplusplus >= 201103L"}
{"code":"V835","currLine":"      insert(const_iterator __position, size_type __n, const bool& __x)","falseAlarm":false,"level":3,"message":"Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, replace the third argument 'const bool& __x' with 'bool __x'.","nextLine":"      {","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\stl_bvector.h","lines":[1039]}],"prevLine":"      iterator"}
{"code":"V769","currLine":"      (this->_M_impl._M_end_addr() - __p)","cwe":119,"falseAlarm":false,"level":3,"message":"The 'this->_M_impl._M_end_addr()' pointer in the 'this->_M_impl._M_end_addr() - __p' expression could be nullptr. In such case, resulting value will be senseless and it should not be used.","nextLine":"      * sizeof(_Bit_type));","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\stl_bvector.h","lines":[1154]}],"prevLine":"   __builtin_memset(__p, __x ? ~0 : 0,","sastId":"CERT-EXP08-C"}
{"code":"V835","currLine":"     _GLIBCXX_STD_C::_Bit_iterator __last, const bool& __x)","falseAlarm":false,"level":3,"message":"Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, replace the third argument 'const bool& __x' with 'bool __x'.","nextLine":"  {","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\stl_bvector.h","lines":[1347]}],"prevLine":"  __fill_a1(_GLIBCXX_STD_C::_Bit_iterator __first,"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\vector.tcc","lines":[59]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V783","currLine":"   iterator __finish = std::copy(__position, end(), __i);","cwe":119,"falseAlarm":false,"level":3,"message":"Dereferencing of the invalid iterator '__i' might take place.","nextLine":"   this->_M_deallocate();","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\vector.tcc","lines":[908]}],"prevLine":"   *__i++ = __x;","sastId":"CERT-CTR51-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\vector.tcc","lines":[961]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\cstring","lines":[73]}],"prevLine":"{","sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\std_function.h","lines":[45]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V835","currLine":" _M_get_pointer(const _Any_data& __source)","falseAlarm":false,"level":3,"message":"Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, replace the first argument 'const  _Any_data& __source' with ' _Any_data __source'.","nextLine":" {","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\std_function.h","lines":[134]}],"prevLine":" static _Functor*"}
{"code":"V835","currLine":" _M_clone(_Any_data& __dest, const _Any_data& __source, true_type)","falseAlarm":false,"level":3,"message":"Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, replace the second argument 'const  _Any_data& __source' with ' _Any_data __source'.","nextLine":" {","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\std_function.h","lines":[148]}],"prevLine":" static void"}
{"code":"V835","currLine":" _M_clone(_Any_data& __dest, const _Any_data& __source, false_type)","falseAlarm":false,"level":3,"message":"Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, replace the second argument 'const  _Any_data& __source' with ' _Any_data __source'.","nextLine":" {","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\std_function.h","lines":[156]}],"prevLine":" static void"}
{"code":"V772","currLine":"   delete __victim._M_access<_Functor*>();","cwe":758,"falseAlarm":false,"level":1,"message":"Calling a 'delete' operator for a void pointer will cause undefined behavior.","nextLine":" }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\std_function.h","lines":[174]}],"prevLine":" {","sastId":"CERT-MSC15-C"}
{"code":"V835","currLine":" _M_manager(_Any_data& __dest, const _Any_data& __source,","falseAlarm":false,"level":3,"message":"Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, replace the second argument 'const  _Any_data& __source' with ' _Any_data __source'.","nextLine":"     _Manager_operation __op)","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\std_function.h","lines":[179]}],"prevLine":" static bool"}
{"code":"V835","currLine":"      _M_manager(_Any_data& __dest, const _Any_data& __source,","falseAlarm":false,"level":3,"message":"Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, replace the second argument 'const  _Any_data& __source' with ' _Any_data __source'.","nextLine":"   _Manager_operation __op)","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\std_function.h","lines":[268]}],"prevLine":"      static bool"}
{"code":"V835","currLine":"      _M_invoke(const _Any_data& __functor, _ArgTypes&&... __args)","falseAlarm":false,"level":3,"message":"Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, replace the first argument 'const  _Any_data& __functor' with ' _Any_data __functor'.","nextLine":"      {","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\std_function.h","lines":[289]}],"prevLine":"      static _Res"}
{"code":"V835","currLine":"      _M_manager(_Any_data&, const _Any_data&, _Manager_operation)","falseAlarm":false,"level":3,"message":"Passing cheap-to-copy argument by reference may lead to decreased performance. To avoid this, pass the second argument by value.","nextLine":"      { return false; }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\std_function.h","lines":[302]}],"prevLine":"      static bool"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\regex_constants.h","lines":[33]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\regex_error.h","lines":[33]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\regex_automaton.h","lines":[36]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\regex_automaton.tcc","lines":[31]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V783","currLine":"     __ref._M_next = __m.find(__ref._M_next)->second;","cwe":119,"falseAlarm":false,"level":3,"message":"Dereferencing of the invalid iterator '__m.find(__ref._M_next)' might take place.","nextLine":"   if (__ref._M_has_alt() && __ref._M_alt != _S_invalid_state_id)","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\regex_automaton.tcc","lines":[223]}],"prevLine":"   if (__ref._M_next != _S_invalid_state_id)","sastId":"CERT-CTR51-CPP"}
{"code":"V783","currLine":"     __ref._M_alt = __m.find(__ref._M_alt)->second;","cwe":119,"falseAlarm":false,"level":3,"message":"Dereferencing of the invalid iterator '__m.find(__ref._M_alt)' might take place.","nextLine":" }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\regex_automaton.tcc","lines":[225]}],"prevLine":"   if (__ref._M_has_alt() && __ref._M_alt != _S_invalid_state_id)","sastId":"CERT-CTR51-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\regex_scanner.h","lines":[31]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\regex_scanner.tcc","lines":[49]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\regex_compiler.h","lines":[31]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V769","currLine":"      return _Cmplr(__cfirst, __cfirst + __len, __loc, __flags)._M_get_nfa();","cwe":119,"falseAlarm":false,"level":3,"message":"The '__cfirst' pointer in the '__cfirst + __len' expression could be nullptr. In such case, resulting value will be senseless and it should not be used.","nextLine":"    }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\regex_compiler.h","lines":[183]}],"prevLine":"      using _Cmplr = _Compiler<_TraitsT>;","sastId":"CERT-EXP08-C"}
{"code":"V823","currLine":" _M_range_set.push_back(make_pair(_M_translator._M_transform(__l),","falseAlarm":false,"level":2,"message":"Decreased performance. Object may be created in-place in the '_M_range_set' container. Consider replacing methods: 'push_back' -> 'emplace_back'.","nextLine":"      _M_translator._M_transform(__r)));","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\regex_compiler.h","lines":[493]}],"prevLine":"         \"Invalid range in bracket expression.\");"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\regex_compiler.tcc","lines":[58]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\regex.h","lines":[31]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V832","currLine":"      regex_traits() { }","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty constructor body.","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\regex.h","lines":[160]}],"prevLine":"       */"}
{"code":"V530","currLine":"   __fctyp.tolower(__s.data(), __s.data() + __s.size());","cwe":252,"falseAlarm":false,"level":1,"message":"The return value of function 'tolower' is required to be utilized.","nextLine":"   return this->transform(__s.data(), __s.data() + __s.size());","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\regex.h","lines":[261]}],"prevLine":"   std::vector<char_type> __s(__first, __last);","sastId":"CERT-EXP12-C"}
{"code":"V832","currLine":"      ~basic_regex()","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty destructor body.","nextLine":"      { }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\regex.h","lines":[526]}],"prevLine":"       */"}
{"code":"V690","currLine":"    class basic_regex","falseAlarm":false,"level":3,"message":"The 'basic_regex' class implements the copy assignment operator, but lacks a copy constructor. It is dangerous to use such a class.","nextLine":"    {","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\regex.h","lines":[389]}],"prevLine":"  template<typename _Ch_type, typename _Rx_traits = regex_traits<_Ch_type>>"}
{"code":"V690","currLine":"    class basic_regex","falseAlarm":false,"level":3,"message":"The 'basic_regex' class implements the move assignment operator, but lacks a move constructor. It is dangerous to use such a class.","nextLine":"    {","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\regex.h","lines":[389]}],"prevLine":"  template<typename _Ch_type, typename _Rx_traits = regex_traits<_Ch_type>>"}
{"code":"V811","currLine":"      return regex_replace(___out, __first, __last, __e, __fmt.c_str(), __flags);","falseAlarm":false,"level":1,"message":"Decreased performance. Excessive type casting: string -> char * -> string. Consider inspecting fifth argument of the function regex_replace.","nextLine":"    }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\regex.h","lines":[2485]}],"prevLine":"    {"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\regex.tcc","lines":[31]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V807","currLine":"   else if (_M_has_m1 && __prev->suffix().length() != 0)","falseAlarm":false,"level":3,"message":"Decreased performance. Consider creating a reference to avoid using the '__prev->suffix()' expression repeatedly.","nextLine":"     {","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\regex.tcc","lines":[629,632,633]}],"prevLine":"     _M_result = &_M_current_match();"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\regex_executor.h","lines":[33]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\regex_executor.tcc","lines":[31]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\stl_set.h","lines":[64]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\stl_multiset.h","lines":[64]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\x86_64-w64-mingw32\\bits\\c++io.h","lines":[38]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\x86_64-w64-mingw32\\bits\\basic_file.h","lines":[44]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\fstream","lines":[52]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V832","currLine":"      ~basic_ifstream()","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty destructor body.","nextLine":"      { }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\fstream","lines":[604]}],"prevLine":"       */"}
{"code":"V832","currLine":"      ~basic_ofstream()","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty destructor body.","nextLine":"      { }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\fstream","lines":[867]}],"prevLine":"       */"}
{"code":"V832","currLine":"      ~basic_fstream()","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty destructor body.","nextLine":"      { }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\fstream","lines":[1123]}],"prevLine":"       */"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\fstream.tcc","lines":[43]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V808","currLine":" } __cs (this);","falseAlarm":false,"level":1,"message":"'__cs' object of '__close_sentry' type was created but was not utilized.","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\fstream.tcc","lines":[272]}],"prevLine":"   }"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\quoted_string.h","lines":[40]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V1061","currLine":"namespace std _GLIBCXX_VISIBILITY(default)","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"{","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\iomanip","lines":[49]}],"sastId":"CERT-DCL58-CPP"}
{"code":"V524","currLine":"    make_reverse_iterator(_Iterator __i)","falseAlarm":false,"level":3,"message":"It is odd that the body of 'make_reverse_iterator' function is fully equivalent to the body of '__make_reverse_iterator' function.","nextLine":"    { return reverse_iterator<_Iterator>(__i); }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\stl_iterator.h","lines":[587,576]}],"prevLine":"    inline _GLIBCXX17_CONSTEXPR reverse_iterator<_Iterator>"}
{"code":"V524","currLine":"  fabs(float __x)","falseAlarm":false,"level":3,"message":"It is odd that the body of 'fabs' function is fully equivalent to the body of 'abs' function (std_abs.h, line 75).","nextLine":"  { return __builtin_fabsf(__x); }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\cmath","lines":[241]},{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\std_abs.h","lines":[75]}],"prevLine":"  inline _GLIBCXX_CONSTEXPR float"}
{"code":"V524","currLine":"  fabs(long double __x)","falseAlarm":false,"level":3,"message":"It is odd that the body of 'fabs' function is fully equivalent to the body of 'abs' function (std_abs.h, line 79).","nextLine":"  { return __builtin_fabsl(__x); }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\cmath","lines":[245]},{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\std_abs.h","lines":[79]}],"prevLine":"  inline _GLIBCXX_CONSTEXPR long double"}
{"code":"V524","currLine":"      overflow(int_type __c _IsUnused  = traits_type::eof())","falseAlarm":false,"level":3,"message":"It is odd that the body of 'overflow' function is fully equivalent to the body of 'pbackfail' function.","nextLine":"      { return traits_type::eof(); }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\streambuf","lines":[773,729]}],"prevLine":"      virtual int_type"}
{"code":"V730","currLine":"      pointer_to_unary_function() { }","cwe":457,"falseAlarm":false,"level":2,"message":"Not all members of a class are initialized inside the constructor. Consider inspecting: _M_ptr.","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\stl_function.h","lines":[1086]}],"prevLine":"    public:","sastId":"CERT-EXP53-CPP"}
{"code":"V730","currLine":"      pointer_to_binary_function() { }","cwe":457,"falseAlarm":false,"level":2,"message":"Not all members of a class are initialized inside the constructor. Consider inspecting: _M_ptr.","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\stl_function.h","lines":[1112]}],"prevLine":"    public:","sastId":"CERT-EXP53-CPP"}
{"code":"V730","currLine":"      basic_string(const basic_string& __str)","cwe":457,"falseAlarm":false,"level":1,"message":"Not all members of a class are initialized inside the constructor. Consider inspecting: _M_string_length.","nextLine":"      : _M_dataplus(_M_local_data(),","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\basic_string.h","lines":[456]}],"prevLine":"       */","sastId":"CERT-EXP53-CPP"}
{"code":"V730","currLine":"      basic_string(const basic_string& __str, size_type __pos,","cwe":457,"falseAlarm":false,"level":1,"message":"Not all members of a class are initialized inside the constructor. Consider inspecting: _M_string_length.","nextLine":"     const _Alloc& __a = _Alloc())","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\basic_string.h","lines":[469]}],"prevLine":"       */","sastId":"CERT-EXP53-CPP"}
{"code":"V730","currLine":"      basic_string(const basic_string& __str, size_type __pos,","cwe":457,"falseAlarm":false,"level":1,"message":"Not all members of a class are initialized inside the constructor. Consider inspecting: _M_string_length.","nextLine":"     size_type __n)","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\basic_string.h","lines":[484]}],"prevLine":"       */","sastId":"CERT-EXP53-CPP"}
{"code":"V730","currLine":"      basic_string(const basic_string& __str, size_type __pos,","cwe":457,"falseAlarm":false,"level":1,"message":"Not all members of a class are initialized inside the constructor. Consider inspecting: _M_string_length.","nextLine":"     size_type __n, const _Alloc& __a)","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\basic_string.h","lines":[500]}],"prevLine":"       */","sastId":"CERT-EXP53-CPP"}
{"code":"V730","currLine":"      basic_string(const _CharT* __s, size_type __n,","cwe":457,"falseAlarm":false,"level":1,"message":"Not all members of a class are initialized inside the constructor. Consider inspecting: _M_string_length.","nextLine":"     const _Alloc& __a = _Alloc())","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\basic_string.h","lines":[518]}],"prevLine":"       */","sastId":"CERT-EXP53-CPP"}
{"code":"V730","currLine":"      basic_string(size_type __n, _CharT __c, const _Alloc& __a = _Alloc())","cwe":457,"falseAlarm":false,"level":2,"message":"It is possible that not all members of a class are initialized inside the constructor. Consider inspecting: _M_string_length.","nextLine":"      : _M_dataplus(_M_local_data(), __a)","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\basic_string.h","lines":[553]}],"prevLine":"#endif","sastId":"CERT-EXP53-CPP"}
{"code":"V730","currLine":"      basic_string(initializer_list<_CharT> __l, const _Alloc& __a = _Alloc())","cwe":457,"falseAlarm":false,"level":1,"message":"Not all members of a class are initialized inside the constructor. Consider inspecting: _M_string_length.","nextLine":"      : _M_dataplus(_M_local_data(), __a)","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\basic_string.h","lines":[592]}],"prevLine":"       */","sastId":"CERT-EXP53-CPP"}
{"code":"V730","currLine":"      basic_string(const basic_string& __str, const _Alloc& __a)","cwe":457,"falseAlarm":false,"level":1,"message":"Not all members of a class are initialized inside the constructor. Consider inspecting: _M_string_length.","nextLine":"      : _M_dataplus(_M_local_data(), __a)","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\basic_string.h","lines":[596]}],"sastId":"CERT-EXP53-CPP"}
{"code":"V1077","currLine":"      basic_string(basic_string&& __str, const _Alloc& __a)","cwe":457,"falseAlarm":false,"level":2,"message":"The 'basic_string' constructor contains potentially uninitialized members. Inspect the following: _M_string_length.","nextLine":"      noexcept(_Alloc_traits::_S_always_equal())","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\basic_string.h","lines":[600,191]}]}
{"code":"V730","currLine":"    id() { }","cwe":457,"falseAlarm":false,"level":2,"message":"Not all members of a class are initialized inside the constructor. Consider inspecting: _M_index.","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\locale_classes.h","lines":[516]}],"prevLine":"    /// Constructor.","sastId":"CERT-EXP53-CPP"}
{"code":"V730","currLine":"      __aligned_membuf(std::nullptr_t) { }","cwe":457,"falseAlarm":false,"level":2,"message":"Not all members of a class are initialized inside the constructor. Consider inspecting: _M_storage.","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\ext\\aligned_buffer.h","lines":[61]}],"prevLine":"      // Can be used to avoid value-initialization zeroing _M_storage.","sastId":"CERT-EXP53-CPP"}
{"code":"V730","currLine":"      __aligned_buffer(std::nullptr_t) { }","cwe":457,"falseAlarm":false,"level":2,"message":"Not all members of a class are initialized inside the constructor. Consider inspecting: _M_storage.","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\ext\\aligned_buffer.h","lines":[99]}],"prevLine":"      // Can be used to avoid value-initialization","sastId":"CERT-EXP53-CPP"}
{"code":"V730","currLine":"     messages<_CharT>::messages(size_t __refs)","cwe":457,"falseAlarm":false,"level":1,"message":"Not all members of a class are initialized inside the constructor. Consider inspecting: _M_name_messages.","nextLine":"     : facet(__refs)","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\x86_64-w64-mingw32\\bits\\messages_members.h","lines":[42]}],"prevLine":"  template<typename _CharT>","sastId":"CERT-EXP53-CPP"}
{"code":"V730","currLine":"     messages<_CharT>::messages(__c_locale, const char*, size_t __refs)","cwe":457,"falseAlarm":false,"level":1,"message":"Not all members of a class are initialized inside the constructor. Consider inspecting: _M_name_messages.","nextLine":"     : facet(__refs)","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\x86_64-w64-mingw32\\bits\\messages_members.h","lines":[47]}],"prevLine":"  template<typename _CharT>","sastId":"CERT-EXP53-CPP"}
{"code":"V1077","currLine":"    __mutex() ","cwe":457,"falseAlarm":false,"level":2,"message":"The '__mutex' constructor contains potentially uninitialized members. Inspect the following: _M_mutex.","nextLine":"    { ","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\ext\\concurrence.h","lines":[128,132]}],"prevLine":"  public:"}
{"code":"V730","currLine":"    _Function_base() : _M_manager(nullptr) { }","cwe":457,"falseAlarm":false,"level":1,"message":"Not all members of a class are initialized inside the constructor. Consider inspecting: _M_functor.","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\std_function.h","lines":[240]}],"sastId":"CERT-EXP53-CPP"}
{"code":"V730","currLine":"      function() noexcept","cwe":457,"falseAlarm":false,"level":1,"message":"Not all members of a class are initialized inside the constructor. Consider inspecting: _M_invoker.","nextLine":"      : _Function_base() { }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\std_function.h","lines":[355]}],"prevLine":"       */","sastId":"CERT-EXP53-CPP"}
{"code":"V730","currLine":"      function(nullptr_t) noexcept","cwe":457,"falseAlarm":false,"level":1,"message":"Not all members of a class are initialized inside the constructor. Consider inspecting: _M_invoker.","nextLine":"      : _Function_base() { }","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\std_function.h","lines":[362]}],"prevLine":"       */","sastId":"CERT-EXP53-CPP"}
{"code":"V1077","currLine":"      function(const function& __x)","cwe":457,"falseAlarm":false,"level":2,"message":"The constructor contains potentially uninitialized members. Inspect the following: _M_invoker.","nextLine":"      : _Function_base()","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\std_function.h","lines":[373,379]}],"prevLine":"       */"}
{"code":"V730","currLine":"      explicit","cwe":457,"falseAlarm":false,"level":1,"message":"Not all members of a class are initialized inside the constructor. Consider inspecting: _M_begin.","nextLine":"      match_results(const _Alloc& __a) noexcept","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\regex.h","lines":[1736]}],"prevLine":"       */","sastId":"CERT-EXP53-CPP"}
{"code":"V730","currLine":"      _Executor(_BiIter         __begin,","cwe":457,"falseAlarm":false,"level":1,"message":"Not all members of a class are initialized inside the constructor. Consider inspecting: _M_has_sol.","nextLine":"  _BiIter         __end,","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\regex_executor.h","lines":[69]}],"prevLine":"    public:","sastId":"CERT-EXP53-CPP"}
{"code":"V1042","currLine":"// terms of the GNU General Public License as published by the","cwe":1177,"falseAlarm":false,"level":1,"message":"This file is marked with copyleft license, which requires you to open the derived source code.","nextLine":"// Free Software Foundation; either version 3, or (at your option)","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\iostream","lines":[7]}],"prevLine":"// software; you can redistribute it and/or modify it under the"}
{"code":"V1071","currLine":"      _M_check(size_type __pos, const char* __s) const","falseAlarm":false,"level":2,"message":"Consider inspecting the '_M_check' function. The return value is not always used. Total calls: 12, discarded results: 1.","nextLine":"      {","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\bits\\basic_string.h","lines":[318,1828]}],"prevLine":"      size_type"}
{"code":"V1059","currLine":"#define iswalpha(_c) (iswctype(_c,_ALPHA))","falseAlarm":false,"level":3,"message":"The 'iswalpha' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define iswupper(_c) (iswctype(_c,_UPPER))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\wchar.h","lines":[364]}],"prevLine":"#if !defined(__cplusplus) || defined(_CRT_WCTYPE_NOINLINE)","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define iswupper(_c) (iswctype(_c,_UPPER))","falseAlarm":false,"level":3,"message":"The 'iswupper' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define iswlower(_c) (iswctype(_c,_LOWER))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\wchar.h","lines":[365]}],"prevLine":"#define iswalpha(_c) (iswctype(_c,_ALPHA))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define iswlower(_c) (iswctype(_c,_LOWER))","falseAlarm":false,"level":3,"message":"The 'iswlower' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define iswdigit(_c) (iswctype(_c,_DIGIT))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\wchar.h","lines":[366]}],"prevLine":"#define iswupper(_c) (iswctype(_c,_UPPER))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define iswdigit(_c) (iswctype(_c,_DIGIT))","falseAlarm":false,"level":3,"message":"The 'iswdigit' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define iswxdigit(_c) (iswctype(_c,_HEX))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\wchar.h","lines":[367]}],"prevLine":"#define iswlower(_c) (iswctype(_c,_LOWER))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define iswxdigit(_c) (iswctype(_c,_HEX))","falseAlarm":false,"level":3,"message":"The 'iswxdigit' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define iswspace(_c) (iswctype(_c,_SPACE))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\wchar.h","lines":[368]}],"prevLine":"#define iswdigit(_c) (iswctype(_c,_DIGIT))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define iswspace(_c) (iswctype(_c,_SPACE))","falseAlarm":false,"level":3,"message":"The 'iswspace' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define iswpunct(_c) (iswctype(_c,_PUNCT))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\wchar.h","lines":[369]}],"prevLine":"#define iswxdigit(_c) (iswctype(_c,_HEX))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define iswpunct(_c) (iswctype(_c,_PUNCT))","falseAlarm":false,"level":3,"message":"The 'iswpunct' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define iswalnum(_c) (iswctype(_c,_ALPHA|_DIGIT))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\wchar.h","lines":[370]}],"prevLine":"#define iswspace(_c) (iswctype(_c,_SPACE))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define iswalnum(_c) (iswctype(_c,_ALPHA|_DIGIT))","falseAlarm":false,"level":3,"message":"The 'iswalnum' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define iswprint(_c) (iswctype(_c,_BLANK|_PUNCT|_ALPHA|_DIGIT))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\wchar.h","lines":[371]}],"prevLine":"#define iswpunct(_c) (iswctype(_c,_PUNCT))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define iswprint(_c) (iswctype(_c,_BLANK|_PUNCT|_ALPHA|_DIGIT))","falseAlarm":false,"level":3,"message":"The 'iswprint' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define iswgraph(_c) (iswctype(_c,_PUNCT|_ALPHA|_DIGIT))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\wchar.h","lines":[372]}],"prevLine":"#define iswalnum(_c) (iswctype(_c,_ALPHA|_DIGIT))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define iswgraph(_c) (iswctype(_c,_PUNCT|_ALPHA|_DIGIT))","falseAlarm":false,"level":3,"message":"The 'iswgraph' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define iswcntrl(_c) (iswctype(_c,_CONTROL))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\wchar.h","lines":[373]}],"prevLine":"#define iswprint(_c) (iswctype(_c,_BLANK|_PUNCT|_ALPHA|_DIGIT))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define iswcntrl(_c) (iswctype(_c,_CONTROL))","falseAlarm":false,"level":3,"message":"The 'iswcntrl' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define iswascii(_c) ((unsigned)(_c) < 0x80)","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\wchar.h","lines":[374]}],"prevLine":"#define iswgraph(_c) (iswctype(_c,_PUNCT|_ALPHA|_DIGIT))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define getwchar() fgetwc(stdin)","falseAlarm":false,"level":3,"message":"The 'getwchar' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define putwchar(_c) fputwc((_c),stdout)","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\wchar.h","lines":[1235]}],"prevLine":"#if !defined(__cplusplus) || defined(_CRT_GETPUTWCHAR_NOINLINE) || defined (__CRT__NO_INLINE)","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define putwchar(_c) fputwc((_c),stdout)","falseAlarm":false,"level":3,"message":"The 'putwchar' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#else","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\wchar.h","lines":[1236]}],"prevLine":"#define getwchar() fgetwc(stdin)","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define getwc(_stm) fgetwc(_stm)","falseAlarm":false,"level":3,"message":"The 'getwc' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define putwc(_c,_stm) fputwc(_c,_stm)","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\wchar.h","lines":[1242]}],"sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define putwc(_c,_stm) fputwc(_c,_stm)","falseAlarm":false,"level":3,"message":"The 'putwc' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#if __MSVCRT_VERSION__ >= 0x800","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\wchar.h","lines":[1243]}],"prevLine":"#define getwc(_stm) fgetwc(_stm)","sastId":"CERT-DCL51-CPP"}
{"code":"V1003","currLine":"#  define __MINGW_MSC_PREREQ(major, minor) \\","falseAlarm":false,"level":3,"message":"The macro '__MINGW_MSC_PREREQ' is a dangerous expression. The parameters 'major', 'minor' must be surrounded by parentheses.","nextLine":"      (_MSC_VER >= (major * 100 + minor * 10))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\_mingw_mac.h","lines":[232]}],"prevLine":"#if defined (_MSC_VER)"}
{"code":"V1059","currLine":"#define swprintf __mingw_swprintf","falseAlarm":false,"level":3,"message":"The 'swprintf' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define vswprintf __mingw_vswprintf","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\swprintf.inl","lines":[78]}],"prevLine":"#if __USE_MINGW_ANSI_STDIO","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define vswprintf __mingw_vswprintf","falseAlarm":false,"level":3,"message":"The 'vswprintf' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#else","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\swprintf.inl","lines":[79]}],"prevLine":"#define swprintf __mingw_swprintf","sastId":"CERT-DCL51-CPP"}
{"code":"V1003","currLine":"# define __glibcxx_requires_non_empty_range(_First,_Last) \\","falseAlarm":false,"level":3,"message":"The macro '__glibcxx_requires_non_empty_range' is a dangerous expression. The parameters '_First', '_Last' must be surrounded by parentheses.","nextLine":"  __glibcxx_assert(_First != _Last)","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\debug\\assertions.h","lines":[49]}],"prevLine":"// Verify that [_First, _Last) forms a non-empty iterator range."}
{"code":"V1003","currLine":"# define __glibcxx_requires_subscript(_N) \\","falseAlarm":false,"level":3,"message":"The macro '__glibcxx_requires_subscript' is a dangerous expression. The parameter '_N' must be surrounded by parentheses.","nextLine":"  __glibcxx_assert(_N < this->size())","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\lib\\gcc\\x86_64-w64-mingw32\\11.2.0\\include\\c++\\debug\\assertions.h","lines":[51]}],"prevLine":"  __glibcxx_assert(_First != _Last)"}
{"code":"V1059","currLine":"#define getwchar() fgetwc(stdin)","falseAlarm":false,"level":3,"message":"The 'getwchar' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define putwchar(_c) fputwc((_c),stdout)","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\stdio.h","lines":[1408]}],"prevLine":"#if !defined(__cplusplus) || defined(_CRT_GETPUTWCHAR_NOINLINE) || defined (__CRT__NO_INLINE)","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define putwchar(_c) fputwc((_c),stdout)","falseAlarm":false,"level":3,"message":"The 'putwchar' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#else","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\stdio.h","lines":[1409]}],"prevLine":"#define getwchar() fgetwc(stdin)","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define getwc(_stm) fgetwc(_stm)","falseAlarm":false,"level":3,"message":"The 'getwc' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define putwc(_c,_stm) fputwc(_c,_stm)","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\stdio.h","lines":[1415]}],"sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define putwc(_c,_stm) fputwc(_c,_stm)","falseAlarm":false,"level":3,"message":"The 'putwc' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#if __MSVCRT_VERSION__ >= 0x800","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\stdio.h","lines":[1416]}],"prevLine":"#define getwc(_stm) fgetwc(_stm)","sastId":"CERT-DCL51-CPP"}
{"code":"V1003","currLine":"#define _chvalidchk_l(_Char,_Flag,_Locale) (!_Locale ? __chvalidchk(_Char,_Flag) : ((_locale_t)_Locale)->locinfo->_locale_pctype[(unsigned char)(_Char)] & (_Flag))","falseAlarm":false,"level":3,"message":"The macro '_chvalidchk_l' is a dangerous expression. The parameter '_Locale' must be surrounded by parentheses.","nextLine":"#define _ischartype_l(_Char,_Flag,_Locale) (((_Locale)!=NULL && (((_locale_t)(_Locale))->locinfo->_locale_mb_cur_max) > 1) ? _isctype_l(_Char,(_Flag),_Locale) : _chvalidchk_l(_Char,_Flag,_Locale))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\ctype.h","lines":[219]}],"prevLine":"#ifdef _UCRT"}
{"code":"V1003","currLine":"#define _chvalidchk_l(_Char,_Flag,_Locale) (!_Locale ? __chvalidchk(_Char,_Flag) : ((_locale_t)_Locale)->locinfo->pctype[(unsigned char)(_Char)] & (_Flag))","falseAlarm":false,"level":3,"message":"The macro '_chvalidchk_l' is a dangerous expression. The parameter '_Locale' must be surrounded by parentheses.","nextLine":"#define _ischartype_l(_Char,_Flag,_Locale) (((_Locale)!=NULL && (((_locale_t)(_Locale))->locinfo->mb_cur_max) > 1) ? _isctype_l(_Char,(_Flag),_Locale) : _chvalidchk_l(_Char,_Flag,_Locale))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\ctype.h","lines":[222]}],"prevLine":"#else"}
{"code":"V1059","currLine":"#define iswalpha(_c) (iswctype(_c,_ALPHA))","falseAlarm":false,"level":3,"message":"The 'iswalpha' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define iswupper(_c) (iswctype(_c,_UPPER))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\ctype.h","lines":[246]}],"prevLine":"#ifndef __cplusplus","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define iswupper(_c) (iswctype(_c,_UPPER))","falseAlarm":false,"level":3,"message":"The 'iswupper' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define iswlower(_c) (iswctype(_c,_LOWER))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\ctype.h","lines":[247]}],"prevLine":"#define iswalpha(_c) (iswctype(_c,_ALPHA))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define iswlower(_c) (iswctype(_c,_LOWER))","falseAlarm":false,"level":3,"message":"The 'iswlower' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define iswdigit(_c) (iswctype(_c,_DIGIT))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\ctype.h","lines":[248]}],"prevLine":"#define iswupper(_c) (iswctype(_c,_UPPER))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define iswdigit(_c) (iswctype(_c,_DIGIT))","falseAlarm":false,"level":3,"message":"The 'iswdigit' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define iswxdigit(_c) (iswctype(_c,_HEX))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\ctype.h","lines":[249]}],"prevLine":"#define iswlower(_c) (iswctype(_c,_LOWER))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define iswxdigit(_c) (iswctype(_c,_HEX))","falseAlarm":false,"level":3,"message":"The 'iswxdigit' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define iswspace(_c) (iswctype(_c,_SPACE))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\ctype.h","lines":[250]}],"prevLine":"#define iswdigit(_c) (iswctype(_c,_DIGIT))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define iswspace(_c) (iswctype(_c,_SPACE))","falseAlarm":false,"level":3,"message":"The 'iswspace' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define iswpunct(_c) (iswctype(_c,_PUNCT))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\ctype.h","lines":[251]}],"prevLine":"#define iswxdigit(_c) (iswctype(_c,_HEX))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define iswpunct(_c) (iswctype(_c,_PUNCT))","falseAlarm":false,"level":3,"message":"The 'iswpunct' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define iswalnum(_c) (iswctype(_c,_ALPHA|_DIGIT))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\ctype.h","lines":[252]}],"prevLine":"#define iswspace(_c) (iswctype(_c,_SPACE))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define iswalnum(_c) (iswctype(_c,_ALPHA|_DIGIT))","falseAlarm":false,"level":3,"message":"The 'iswalnum' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define iswprint(_c) (iswctype(_c,_BLANK|_PUNCT|_ALPHA|_DIGIT))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\ctype.h","lines":[253]}],"prevLine":"#define iswpunct(_c) (iswctype(_c,_PUNCT))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define iswprint(_c) (iswctype(_c,_BLANK|_PUNCT|_ALPHA|_DIGIT))","falseAlarm":false,"level":3,"message":"The 'iswprint' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define iswgraph(_c) (iswctype(_c,_PUNCT|_ALPHA|_DIGIT))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\ctype.h","lines":[254]}],"prevLine":"#define iswalnum(_c) (iswctype(_c,_ALPHA|_DIGIT))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define iswgraph(_c) (iswctype(_c,_PUNCT|_ALPHA|_DIGIT))","falseAlarm":false,"level":3,"message":"The 'iswgraph' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define iswcntrl(_c) (iswctype(_c,_CONTROL))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\ctype.h","lines":[255]}],"prevLine":"#define iswprint(_c) (iswctype(_c,_BLANK|_PUNCT|_ALPHA|_DIGIT))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define iswcntrl(_c) (iswctype(_c,_CONTROL))","falseAlarm":false,"level":3,"message":"The 'iswcntrl' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define iswascii(_c) ((unsigned)(_c) < 0x80)","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\ctype.h","lines":[256]}],"prevLine":"#define iswgraph(_c) (iswctype(_c,_PUNCT|_ALPHA|_DIGIT))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define system(...) (pthread_testcancel(), system(__VA_ARGS__))","falseAlarm":false,"level":3,"message":"The 'system' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define access(...) (pthread_testcancel(), access(__VA_ARGS__))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\pthread.h","lines":[481]}],"prevLine":"//#define Sleep(...) (pthread_testcancel(), Sleep(__VA_ARGS__))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define asctime(...) (pthread_testcancel(), asctime(__VA_ARGS__))","falseAlarm":false,"level":3,"message":"The 'asctime' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define catclose(...) (pthread_testcancel(), catclose(__VA_ARGS__))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\pthread.h","lines":[483]}],"prevLine":"#define access(...) (pthread_testcancel(), access(__VA_ARGS__))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define ctime(...) (pthread_testcancel(), ctime(__VA_ARGS__))","falseAlarm":false,"level":3,"message":"The 'ctime' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define dbm_close(...) (pthread_testcancel(), dbm_close(__VA_ARGS__))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\pthread.h","lines":[490]}],"prevLine":"#define ctermid(...) (pthread_testcancel(), ctermid(__VA_ARGS__))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define fclose(...) (pthread_testcancel(), fclose(__VA_ARGS__))","falseAlarm":false,"level":3,"message":"The 'fclose' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define fflush(...) (pthread_testcancel(), fflush(__VA_ARGS__))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\pthread.h","lines":[506]}],"prevLine":"#define endutxent(...) (pthread_testcancel(), endutxent(__VA_ARGS__))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define fflush(...) (pthread_testcancel(), fflush(__VA_ARGS__))","falseAlarm":false,"level":3,"message":"The 'fflush' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define fgetc(...) (pthread_testcancel(), fgetc(__VA_ARGS__))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\pthread.h","lines":[507]}],"prevLine":"#define fclose(...) (pthread_testcancel(), fclose(__VA_ARGS__))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define fgetc(...) (pthread_testcancel(), fgetc(__VA_ARGS__))","falseAlarm":false,"level":3,"message":"The 'fgetc' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define fgetpos(...) (pthread_testcancel(), fgetpos(__VA_ARGS__))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\pthread.h","lines":[508]}],"prevLine":"#define fflush(...) (pthread_testcancel(), fflush(__VA_ARGS__))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define fgetpos(...) (pthread_testcancel(), fgetpos(__VA_ARGS__))","falseAlarm":false,"level":3,"message":"The 'fgetpos' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define fgets(...) (pthread_testcancel(), fgets(__VA_ARGS__))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\pthread.h","lines":[509]}],"prevLine":"#define fgetc(...) (pthread_testcancel(), fgetc(__VA_ARGS__))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define fgets(...) (pthread_testcancel(), fgets(__VA_ARGS__))","falseAlarm":false,"level":3,"message":"The 'fgets' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define fgetwc(...) (pthread_testcancel(), fgetwc(__VA_ARGS__))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\pthread.h","lines":[510]}],"prevLine":"#define fgetpos(...) (pthread_testcancel(), fgetpos(__VA_ARGS__))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define fgetwc(...) (pthread_testcancel(), fgetwc(__VA_ARGS__))","falseAlarm":false,"level":3,"message":"The 'fgetwc' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define fgetws(...) (pthread_testcancel(), fgetws(__VA_ARGS__))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\pthread.h","lines":[511]}],"prevLine":"#define fgets(...) (pthread_testcancel(), fgets(__VA_ARGS__))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define fgetws(...) (pthread_testcancel(), fgetws(__VA_ARGS__))","falseAlarm":false,"level":3,"message":"The 'fgetws' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define fmtmsg(...) (pthread_testcancel(), fmtmsg(__VA_ARGS__))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\pthread.h","lines":[512]}],"prevLine":"#define fgetwc(...) (pthread_testcancel(), fgetwc(__VA_ARGS__))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define fopen(...) (pthread_testcancel(), fopen(__VA_ARGS__))","falseAlarm":false,"level":3,"message":"The 'fopen' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define fpathconf(...) (pthread_testcancel(), fpathconf(__VA_ARGS__))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\pthread.h","lines":[514]}],"prevLine":"#define fmtmsg(...) (pthread_testcancel(), fmtmsg(__VA_ARGS__))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define fprintf(...) (pthread_testcancel(), fprintf(__VA_ARGS__))","falseAlarm":false,"level":3,"message":"The 'fprintf' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define fputc(...) (pthread_testcancel(), fputc(__VA_ARGS__))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\pthread.h","lines":[516]}],"prevLine":"#define fpathconf(...) (pthread_testcancel(), fpathconf(__VA_ARGS__))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define fputc(...) (pthread_testcancel(), fputc(__VA_ARGS__))","falseAlarm":false,"level":3,"message":"The 'fputc' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define fputs(...) (pthread_testcancel(), fputs(__VA_ARGS__))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\pthread.h","lines":[517]}],"prevLine":"#define fprintf(...) (pthread_testcancel(), fprintf(__VA_ARGS__))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define fputs(...) (pthread_testcancel(), fputs(__VA_ARGS__))","falseAlarm":false,"level":3,"message":"The 'fputs' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define fputwc(...) (pthread_testcancel(), fputwc(__VA_ARGS__))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\pthread.h","lines":[518]}],"prevLine":"#define fputc(...) (pthread_testcancel(), fputc(__VA_ARGS__))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define fputwc(...) (pthread_testcancel(), fputwc(__VA_ARGS__))","falseAlarm":false,"level":3,"message":"The 'fputwc' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define fputws(...) (pthread_testcancel(), fputws(__VA_ARGS__))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\pthread.h","lines":[519]}],"prevLine":"#define fputs(...) (pthread_testcancel(), fputs(__VA_ARGS__))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define fputws(...) (pthread_testcancel(), fputws(__VA_ARGS__))","falseAlarm":false,"level":3,"message":"The 'fputws' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define fread(...) (pthread_testcancel(), fread(__VA_ARGS__))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\pthread.h","lines":[520]}],"prevLine":"#define fputwc(...) (pthread_testcancel(), fputwc(__VA_ARGS__))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define fread(...) (pthread_testcancel(), fread(__VA_ARGS__))","falseAlarm":false,"level":3,"message":"The 'fread' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define freopen(...) (pthread_testcancel(), freopen(__VA_ARGS__))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\pthread.h","lines":[521]}],"prevLine":"#define fputws(...) (pthread_testcancel(), fputws(__VA_ARGS__))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define freopen(...) (pthread_testcancel(), freopen(__VA_ARGS__))","falseAlarm":false,"level":3,"message":"The 'freopen' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define fscanf(...) (pthread_testcancel(), fscanf(__VA_ARGS__))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\pthread.h","lines":[522]}],"prevLine":"#define fread(...) (pthread_testcancel(), fread(__VA_ARGS__))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define fscanf(...) (pthread_testcancel(), fscanf(__VA_ARGS__))","falseAlarm":false,"level":3,"message":"The 'fscanf' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define fseek(...) (pthread_testcancel(), fseek(__VA_ARGS__))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\pthread.h","lines":[523]}],"prevLine":"#define freopen(...) (pthread_testcancel(), freopen(__VA_ARGS__))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define fseek(...) (pthread_testcancel(), fseek(__VA_ARGS__))","falseAlarm":false,"level":3,"message":"The 'fseek' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define fseeko(...) (pthread_testcancel(), fseeko(__VA_ARGS__))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\pthread.h","lines":[524]}],"prevLine":"#define fscanf(...) (pthread_testcancel(), fscanf(__VA_ARGS__))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define fsetpos(...) (pthread_testcancel(), fsetpos(__VA_ARGS__))","falseAlarm":false,"level":3,"message":"The 'fsetpos' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define fstat(...) (pthread_testcancel(), fstat(__VA_ARGS__))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\pthread.h","lines":[526]}],"prevLine":"#define fseeko(...) (pthread_testcancel(), fseeko(__VA_ARGS__))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define ftell(...) (pthread_testcancel(), ftell(__VA_ARGS__))","falseAlarm":false,"level":3,"message":"The 'ftell' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define ftello(...) (pthread_testcancel(), ftello(__VA_ARGS__))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\pthread.h","lines":[528]}],"prevLine":"#define fstat(...) (pthread_testcancel(), fstat(__VA_ARGS__))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define fwprintf(...) (pthread_testcancel(), fwprintf(__VA_ARGS__))","falseAlarm":false,"level":3,"message":"The 'fwprintf' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define fwrite(...) (pthread_testcancel(), fwrite(__VA_ARGS__))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\pthread.h","lines":[531]}],"prevLine":"#define ftw(...) (pthread_testcancel(), ftw(__VA_ARGS__))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define fwrite(...) (pthread_testcancel(), fwrite(__VA_ARGS__))","falseAlarm":false,"level":3,"message":"The 'fwrite' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define fwscanf(...) (pthread_testcancel(), fwscanf(__VA_ARGS__))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\pthread.h","lines":[532]}],"prevLine":"#define fwprintf(...) (pthread_testcancel(), fwprintf(__VA_ARGS__))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define fwscanf(...) (pthread_testcancel(), fwscanf(__VA_ARGS__))","falseAlarm":false,"level":3,"message":"The 'fwscanf' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define getaddrinfo(...) (pthread_testcancel(), getaddrinfo(__VA_ARGS__))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\pthread.h","lines":[533]}],"prevLine":"#define fwrite(...) (pthread_testcancel(), fwrite(__VA_ARGS__))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define getc(...) (pthread_testcancel(), getc(__VA_ARGS__))","falseAlarm":false,"level":3,"message":"The 'getc' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define getc_unlocked(...) (pthread_testcancel(), getc_unlocked(__VA_ARGS__))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\pthread.h","lines":[535]}],"prevLine":"#define getaddrinfo(...) (pthread_testcancel(), getaddrinfo(__VA_ARGS__))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define getchar(...) (pthread_testcancel(), getchar(__VA_ARGS__))","falseAlarm":false,"level":3,"message":"The 'getchar' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define getchar_unlocked(...) (pthread_testcancel(), getchar_unlocked(__VA_ARGS__))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\pthread.h","lines":[537]}],"prevLine":"#define getc_unlocked(...) (pthread_testcancel(), getc_unlocked(__VA_ARGS__))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define gets(...) (pthread_testcancel(), gets(__VA_ARGS__))","falseAlarm":false,"level":3,"message":"The 'gets' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define getservbyname(...) (pthread_testcancel(), getservbyname(__VA_ARGS__))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\pthread.h","lines":[566]}],"prevLine":"#define getpwuid_r(...) (pthread_testcancel(), getpwuid_r(__VA_ARGS__))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define getwc(...) (pthread_testcancel(), getwc(__VA_ARGS__))","falseAlarm":false,"level":3,"message":"The 'getwc' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#undef getwchar","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\pthread.h","lines":[574]}],"prevLine":"#undef getwc","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define getwchar(...) (pthread_testcancel(), getwchar(__VA_ARGS__))","falseAlarm":false,"level":3,"message":"The 'getwchar' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define getwd(...) (pthread_testcancel(), getwd(__VA_ARGS__))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\pthread.h","lines":[576]}],"prevLine":"#undef getwchar","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define localtime(...) (pthread_testcancel(), localtime(__VA_ARGS__))","falseAlarm":false,"level":3,"message":"The 'localtime' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define lseek(...) (pthread_testcancel(), lseek(__VA_ARGS__))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\pthread.h","lines":[583]}],"prevLine":"#define link(...) (pthread_testcancel(), link(__VA_ARGS__))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define perror(...) (pthread_testcancel(), perror(__VA_ARGS__))","falseAlarm":false,"level":3,"message":"The 'perror' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define popen(...) (pthread_testcancel(), popen(__VA_ARGS__))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\pthread.h","lines":[592]}],"prevLine":"#define pclose(...) (pthread_testcancel(), pclose(__VA_ARGS__))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define printf(...) (pthread_testcancel(), printf(__VA_ARGS__))","falseAlarm":false,"level":3,"message":"The 'printf' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define putc(...) (pthread_testcancel(), putc(__VA_ARGS__))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\pthread.h","lines":[617]}],"prevLine":"#define posix_typed_mem_open(...) (pthread_testcancel(), posix_typed_mem_open(__VA_ARGS__))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define putc(...) (pthread_testcancel(), putc(__VA_ARGS__))","falseAlarm":false,"level":3,"message":"The 'putc' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define putc_unlocked(...) (pthread_testcancel(), putc_unlocked(__VA_ARGS__))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\pthread.h","lines":[618]}],"prevLine":"#define printf(...) (pthread_testcancel(), printf(__VA_ARGS__))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define putchar(...) (pthread_testcancel(), putchar(__VA_ARGS__))","falseAlarm":false,"level":3,"message":"The 'putchar' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define putchar_unlocked(...) (pthread_testcancel(), putchar_unlocked(__VA_ARGS__))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\pthread.h","lines":[620]}],"prevLine":"#define putc_unlocked(...) (pthread_testcancel(), putc_unlocked(__VA_ARGS__))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define puts(...) (pthread_testcancel(), puts(__VA_ARGS__))","falseAlarm":false,"level":3,"message":"The 'puts' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define pututxline(...) (pthread_testcancel(), pututxline(__VA_ARGS__))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\pthread.h","lines":[622]}],"prevLine":"#define putchar_unlocked(...) (pthread_testcancel(), putchar_unlocked(__VA_ARGS__))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define putwc(...) (pthread_testcancel(), putwc(__VA_ARGS__))","falseAlarm":false,"level":3,"message":"The 'putwc' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#undef putwchar","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\pthread.h","lines":[625]}],"prevLine":"#undef putwc","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define putwchar(...) (pthread_testcancel(), putwchar(__VA_ARGS__))","falseAlarm":false,"level":3,"message":"The 'putwchar' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define readdir(...) (pthread_testcancel(), readdir(__VA_ARSG__))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\pthread.h","lines":[627]}],"prevLine":"#undef putwchar","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define remove(...) (pthread_testcancel(), remove(__VA_ARGS__))","falseAlarm":false,"level":3,"message":"The 'remove' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define rename(...) (pthread_testcancel(), rename(__VA_ARGS__))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\pthread.h","lines":[630]}],"prevLine":"#define readdir_r(...) (pthread_testcancel(), readdir_r(__VA_ARGS__))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define rename(...) (pthread_testcancel(), rename(__VA_ARGS__))","falseAlarm":false,"level":3,"message":"The 'rename' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define rewind(...) (pthread_testcancel(), rewind(__VA_ARGS__))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\pthread.h","lines":[631]}],"prevLine":"#define remove(...) (pthread_testcancel(), remove(__VA_ARGS__))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define rewind(...) (pthread_testcancel(), rewind(__VA_ARGS__))","falseAlarm":false,"level":3,"message":"The 'rewind' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define rewinddir(...) (pthread_testcancel(), rewinddir(__VA_ARGS__))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\pthread.h","lines":[632]}],"prevLine":"#define rename(...) (pthread_testcancel(), rename(__VA_ARGS__))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define scanf(...) (pthread_testcancel(), scanf(__VA_ARGS__))","falseAlarm":false,"level":3,"message":"The 'scanf' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define seekdir(...) (pthread_testcancel(), seekdir(__VA_ARGS__))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\pthread.h","lines":[634]}],"prevLine":"#define rewinddir(...) (pthread_testcancel(), rewinddir(__VA_ARGS__))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define strerror(...) (pthread_testcancel(), strerror(__VA_ARGS__))","falseAlarm":false,"level":3,"message":"The 'strerror' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define strerror_r(...) (pthread_testcancel(), strerror_r(__VA_ARGS__))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\pthread.h","lines":[645]}],"prevLine":"#define stat(...) (pthread_testcancel(), stat(__VA_ARGS__))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define strftime(...) (pthread_testcancel(), strftime(__VA_ARGS__))","falseAlarm":false,"level":3,"message":"The 'strftime' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define symlink(...) (pthread_testcancel(), symlink(__VA_ARGS__))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\pthread.h","lines":[647]}],"prevLine":"#define strerror_r(...) (pthread_testcancel(), strerror_r(__VA_ARGS__))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define tmpfile(...) (pthread_testcancel(), tmpfile(__VA_ARGS__))","falseAlarm":false,"level":3,"message":"The 'tmpfile' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define tmpnam(...) (pthread_testcancel(), tmpnam(__VA_ARGS__))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\pthread.h","lines":[651]}],"prevLine":"#define syslog(...) (pthread_testcancel(), syslog(__VA_ARGS__))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define tmpnam(...) (pthread_testcancel(), tmpnam(__VA_ARGS__))","falseAlarm":false,"level":3,"message":"The 'tmpnam' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define ttyname(...) (pthread_testcancel(), ttyname(__VA_ARGS__))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\pthread.h","lines":[652]}],"prevLine":"#define tmpfile(...) (pthread_testcancel(), tmpfile(__VA_ARGS__))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define ungetc(...) (pthread_testcancel(), ungetc(__VA_ARGS__))","falseAlarm":false,"level":3,"message":"The 'ungetc' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define ungetwc(...) (pthread_testcancel(), ungetwc(__VA_ARGS__))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\pthread.h","lines":[656]}],"prevLine":"#define tzset(...) (pthread_testcancel(), tzset(__VA_ARGS__))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define ungetwc(...) (pthread_testcancel(), ungetwc(__VA_ARGS__))","falseAlarm":false,"level":3,"message":"The 'ungetwc' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define unlink(...) (pthread_testcancel(), unlink(__VA_ARGS__))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\pthread.h","lines":[657]}],"prevLine":"#define ungetc(...) (pthread_testcancel(), ungetc(__VA_ARGS__))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define vfprintf(...) (pthread_testcancel(), vfprintf(__VA_ARGS__))","falseAlarm":false,"level":3,"message":"The 'vfprintf' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define vfwprintf(...) (pthread_testcancel(), vfwprintf(__VA_ARGS__))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\pthread.h","lines":[659]}],"prevLine":"#define unlink(...) (pthread_testcancel(), unlink(__VA_ARGS__))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define vfwprintf(...) (pthread_testcancel(), vfwprintf(__VA_ARGS__))","falseAlarm":false,"level":3,"message":"The 'vfwprintf' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define vprintf(...) (pthread_testcancel(), vprintf(__VA_ARGS__))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\pthread.h","lines":[660]}],"prevLine":"#define vfprintf(...) (pthread_testcancel(), vfprintf(__VA_ARGS__))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define vprintf(...) (pthread_testcancel(), vprintf(__VA_ARGS__))","falseAlarm":false,"level":3,"message":"The 'vprintf' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define vwprintf(...) (pthread_testcancel(), vwprintf(__VA_ARGS__))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\pthread.h","lines":[661]}],"prevLine":"#define vfwprintf(...) (pthread_testcancel(), vfwprintf(__VA_ARGS__))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define vwprintf(...) (pthread_testcancel(), vwprintf(__VA_ARGS__))","falseAlarm":false,"level":3,"message":"The 'vwprintf' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define wcsftime(...) (pthread_testcancel(), wcsftime(__VA_ARGS__))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\pthread.h","lines":[662]}],"prevLine":"#define vprintf(...) (pthread_testcancel(), vprintf(__VA_ARGS__))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define wcsftime(...) (pthread_testcancel(), wcsftime(__VA_ARGS__))","falseAlarm":false,"level":3,"message":"The 'wcsftime' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define wordexp(...) (pthread_testcancel(), wordexp(__VA_ARGS__))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\pthread.h","lines":[663]}],"prevLine":"#define vwprintf(...) (pthread_testcancel(), vwprintf(__VA_ARGS__))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define wprintf(...) (pthread_testcancel(), wprintf(__VA_ARGS__))","falseAlarm":false,"level":3,"message":"The 'wprintf' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define wscanf(...) (pthread_testcancel(), wscanf(__VA_ARGS__))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\pthread.h","lines":[665]}],"prevLine":"#define wordexp(...) (pthread_testcancel(), wordexp(__VA_ARGS__))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define wscanf(...) (pthread_testcancel(), wscanf(__VA_ARGS__))","falseAlarm":false,"level":3,"message":"The 'wscanf' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#endif","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\pthread.h","lines":[666]}],"prevLine":"#define wprintf(...) (pthread_testcancel(), wprintf(__VA_ARGS__))","sastId":"CERT-DCL51-CPP"}
{"code":"V1003","currLine":"  #define rand_r(__seed) (__seed == __seed ? rand () : rand ())","falseAlarm":false,"level":3,"message":"The macro 'rand_r' is a dangerous expression. The parameter '__seed' must be surrounded by parentheses.","nextLine":"  #endif","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\stdlib.h","lines":[475]}],"prevLine":"  #ifndef rand_r"}
{"code":"V1059","currLine":"#define iswalpha(_c) (iswctype(_c,_ALPHA))","falseAlarm":false,"level":3,"message":"The 'iswalpha' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define iswupper(_c) (iswctype(_c,_UPPER))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\wctype.h","lines":[144]}],"prevLine":"#ifndef __cplusplus","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define iswupper(_c) (iswctype(_c,_UPPER))","falseAlarm":false,"level":3,"message":"The 'iswupper' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define iswlower(_c) (iswctype(_c,_LOWER))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\wctype.h","lines":[145]}],"prevLine":"#define iswalpha(_c) (iswctype(_c,_ALPHA))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define iswlower(_c) (iswctype(_c,_LOWER))","falseAlarm":false,"level":3,"message":"The 'iswlower' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define iswdigit(_c) (iswctype(_c,_DIGIT))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\wctype.h","lines":[146]}],"prevLine":"#define iswupper(_c) (iswctype(_c,_UPPER))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define iswdigit(_c) (iswctype(_c,_DIGIT))","falseAlarm":false,"level":3,"message":"The 'iswdigit' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define iswxdigit(_c) (iswctype(_c,_HEX))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\wctype.h","lines":[147]}],"prevLine":"#define iswlower(_c) (iswctype(_c,_LOWER))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define iswxdigit(_c) (iswctype(_c,_HEX))","falseAlarm":false,"level":3,"message":"The 'iswxdigit' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define iswspace(_c) (iswctype(_c,_SPACE))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\wctype.h","lines":[148]}],"prevLine":"#define iswdigit(_c) (iswctype(_c,_DIGIT))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define iswspace(_c) (iswctype(_c,_SPACE))","falseAlarm":false,"level":3,"message":"The 'iswspace' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define iswpunct(_c) (iswctype(_c,_PUNCT))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\wctype.h","lines":[149]}],"prevLine":"#define iswxdigit(_c) (iswctype(_c,_HEX))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define iswpunct(_c) (iswctype(_c,_PUNCT))","falseAlarm":false,"level":3,"message":"The 'iswpunct' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define iswalnum(_c) (iswctype(_c,_ALPHA|_DIGIT))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\wctype.h","lines":[150]}],"prevLine":"#define iswspace(_c) (iswctype(_c,_SPACE))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define iswalnum(_c) (iswctype(_c,_ALPHA|_DIGIT))","falseAlarm":false,"level":3,"message":"The 'iswalnum' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define iswprint(_c) (iswctype(_c,_BLANK|_PUNCT|_ALPHA|_DIGIT))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\wctype.h","lines":[151]}],"prevLine":"#define iswpunct(_c) (iswctype(_c,_PUNCT))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define iswprint(_c) (iswctype(_c,_BLANK|_PUNCT|_ALPHA|_DIGIT))","falseAlarm":false,"level":3,"message":"The 'iswprint' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define iswgraph(_c) (iswctype(_c,_PUNCT|_ALPHA|_DIGIT))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\wctype.h","lines":[152]}],"prevLine":"#define iswalnum(_c) (iswctype(_c,_ALPHA|_DIGIT))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define iswgraph(_c) (iswctype(_c,_PUNCT|_ALPHA|_DIGIT))","falseAlarm":false,"level":3,"message":"The 'iswgraph' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define iswcntrl(_c) (iswctype(_c,_CONTROL))","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\wctype.h","lines":[153]}],"prevLine":"#define iswprint(_c) (iswctype(_c,_BLANK|_PUNCT|_ALPHA|_DIGIT))","sastId":"CERT-DCL51-CPP"}
{"code":"V1059","currLine":"#define iswcntrl(_c) (iswctype(_c,_CONTROL))","falseAlarm":false,"level":3,"message":"The 'iswcntrl' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define iswascii(_c) ((unsigned)(_c) < 0x80)","positions":[{"file":"C:\\Program Files\\JetBrains\\CLion 2023.1.1\\bin\\mingw\\x86_64-w64-mingw32\\include\\wctype.h","lines":[154]}],"prevLine":"#define iswgraph(_c) (iswctype(_c,_PUNCT|_ALPHA|_DIGIT))","sastId":"CERT-DCL51-CPP"}
{"code":"Renew","falseAlarm":false,"level":0,"message":"Your license will expire in 8 days. Click 'Renew' to learn more or contact us at support@viva64.com.","positions":[{"file":" ","lines":[1]}]}
